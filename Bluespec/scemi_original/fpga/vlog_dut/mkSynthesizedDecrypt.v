//
// Generated by Bluespec Compiler, version 2014.07.A (build 34078, 2014-07-30)
//
// On Tue Apr 26 11:46:13 EDT 2016
//
//
// Ports:
// Name                         I/O  size props
// RDY_setKey                     O     1
// RDY_inputMessage               O     1 reg
// getResult                      O    48 reg
// RDY_getResult                  O     1 reg
// CLK                            I     1 clock
// RST_N                          I     1 reset
// setKey_key                     I    96
// inputMessage_text              I    48 reg
// EN_setKey                      I     1
// EN_inputMessage                I     1
// EN_getResult                   I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkSynthesizedDecrypt(CLK,
			    RST_N,

			    setKey_key,
			    EN_setKey,
			    RDY_setKey,

			    inputMessage_text,
			    EN_inputMessage,
			    RDY_inputMessage,

			    EN_getResult,
			    getResult,
			    RDY_getResult);
  input  CLK;
  input  RST_N;

  // action method setKey
  input  [95 : 0] setKey_key;
  input  EN_setKey;
  output RDY_setKey;

  // action method inputMessage
  input  [47 : 0] inputMessage_text;
  input  EN_inputMessage;
  output RDY_inputMessage;

  // actionvalue method getResult
  input  EN_getResult;
  output [47 : 0] getResult;
  output RDY_getResult;

  // signals for module outputs
  wire [47 : 0] getResult;
  wire RDY_getResult, RDY_inputMessage, RDY_setKey;

  // register dec_alpha
  reg [4 : 0] dec_alpha;
  wire [4 : 0] dec_alpha$D_IN;
  wire dec_alpha$EN;

  // register dec_beta
  reg [4 : 0] dec_beta;
  wire [4 : 0] dec_beta$D_IN;
  wire dec_beta$EN;

  // register dec_k0
  reg [23 : 0] dec_k0;
  wire [23 : 0] dec_k0$D_IN;
  wire dec_k0$EN;

  // register dec_l_0
  reg [23 : 0] dec_l_0;
  wire [23 : 0] dec_l_0$D_IN;
  wire dec_l_0$EN;

  // register dec_l_1
  reg [23 : 0] dec_l_1;
  wire [23 : 0] dec_l_1$D_IN;
  wire dec_l_1$EN;

  // register dec_l_10
  reg [23 : 0] dec_l_10;
  wire [23 : 0] dec_l_10$D_IN;
  wire dec_l_10$EN;

  // register dec_l_11
  reg [23 : 0] dec_l_11;
  wire [23 : 0] dec_l_11$D_IN;
  wire dec_l_11$EN;

  // register dec_l_12
  reg [23 : 0] dec_l_12;
  wire [23 : 0] dec_l_12$D_IN;
  wire dec_l_12$EN;

  // register dec_l_13
  reg [23 : 0] dec_l_13;
  wire [23 : 0] dec_l_13$D_IN;
  wire dec_l_13$EN;

  // register dec_l_14
  reg [23 : 0] dec_l_14;
  wire [23 : 0] dec_l_14$D_IN;
  wire dec_l_14$EN;

  // register dec_l_15
  reg [23 : 0] dec_l_15;
  wire [23 : 0] dec_l_15$D_IN;
  wire dec_l_15$EN;

  // register dec_l_16
  reg [23 : 0] dec_l_16;
  wire [23 : 0] dec_l_16$D_IN;
  wire dec_l_16$EN;

  // register dec_l_17
  reg [23 : 0] dec_l_17;
  wire [23 : 0] dec_l_17$D_IN;
  wire dec_l_17$EN;

  // register dec_l_18
  reg [23 : 0] dec_l_18;
  wire [23 : 0] dec_l_18$D_IN;
  wire dec_l_18$EN;

  // register dec_l_19
  reg [23 : 0] dec_l_19;
  wire [23 : 0] dec_l_19$D_IN;
  wire dec_l_19$EN;

  // register dec_l_2
  reg [23 : 0] dec_l_2;
  wire [23 : 0] dec_l_2$D_IN;
  wire dec_l_2$EN;

  // register dec_l_20
  reg [23 : 0] dec_l_20;
  wire [23 : 0] dec_l_20$D_IN;
  wire dec_l_20$EN;

  // register dec_l_21
  reg [23 : 0] dec_l_21;
  wire [23 : 0] dec_l_21$D_IN;
  wire dec_l_21$EN;

  // register dec_l_22
  reg [23 : 0] dec_l_22;
  wire [23 : 0] dec_l_22$D_IN;
  wire dec_l_22$EN;

  // register dec_l_23
  reg [23 : 0] dec_l_23;
  wire [23 : 0] dec_l_23$D_IN;
  wire dec_l_23$EN;

  // register dec_l_24
  reg [23 : 0] dec_l_24;
  wire [23 : 0] dec_l_24$D_IN;
  wire dec_l_24$EN;

  // register dec_l_25
  reg [23 : 0] dec_l_25;
  wire [23 : 0] dec_l_25$D_IN;
  wire dec_l_25$EN;

  // register dec_l_3
  reg [23 : 0] dec_l_3;
  wire [23 : 0] dec_l_3$D_IN;
  wire dec_l_3$EN;

  // register dec_l_4
  reg [23 : 0] dec_l_4;
  wire [23 : 0] dec_l_4$D_IN;
  wire dec_l_4$EN;

  // register dec_l_5
  reg [23 : 0] dec_l_5;
  wire [23 : 0] dec_l_5$D_IN;
  wire dec_l_5$EN;

  // register dec_l_6
  reg [23 : 0] dec_l_6;
  wire [23 : 0] dec_l_6$D_IN;
  wire dec_l_6$EN;

  // register dec_l_7
  reg [23 : 0] dec_l_7;
  wire [23 : 0] dec_l_7$D_IN;
  wire dec_l_7$EN;

  // register dec_l_8
  reg [23 : 0] dec_l_8;
  wire [23 : 0] dec_l_8$D_IN;
  wire dec_l_8$EN;

  // register dec_l_9
  reg [23 : 0] dec_l_9;
  wire [23 : 0] dec_l_9$D_IN;
  wire dec_l_9$EN;

  // register dec_round_0
  reg [23 : 0] dec_round_0;
  wire [23 : 0] dec_round_0$D_IN;
  wire dec_round_0$EN;

  // register dec_round_1
  reg [23 : 0] dec_round_1;
  wire [23 : 0] dec_round_1$D_IN;
  wire dec_round_1$EN;

  // register dec_roundkey_0
  reg [23 : 0] dec_roundkey_0;
  wire [23 : 0] dec_roundkey_0$D_IN;
  wire dec_roundkey_0$EN;

  // register dec_roundkey_1
  reg [23 : 0] dec_roundkey_1;
  wire [23 : 0] dec_roundkey_1$D_IN;
  wire dec_roundkey_1$EN;

  // register dec_xyReg_0
  reg [47 : 0] dec_xyReg_0;
  wire [47 : 0] dec_xyReg_0$D_IN;
  wire dec_xyReg_0$EN;

  // register dec_xyReg_1
  reg [47 : 0] dec_xyReg_1;
  wire [47 : 0] dec_xyReg_1$D_IN;
  wire dec_xyReg_1$EN;

  // ports of submodule dec_ciphertextFIFO
  wire [47 : 0] dec_ciphertextFIFO$D_IN, dec_ciphertextFIFO$D_OUT;
  wire dec_ciphertextFIFO$CLR,
       dec_ciphertextFIFO$DEQ,
       dec_ciphertextFIFO$EMPTY_N,
       dec_ciphertextFIFO$ENQ,
       dec_ciphertextFIFO$FULL_N;

  // ports of submodule dec_plaintextFIFO
  wire [47 : 0] dec_plaintextFIFO$D_IN, dec_plaintextFIFO$D_OUT;
  wire dec_plaintextFIFO$CLR,
       dec_plaintextFIFO$DEQ,
       dec_plaintextFIFO$EMPTY_N,
       dec_plaintextFIFO$ENQ,
       dec_plaintextFIFO$FULL_N;

  // rule scheduling signals
  wire CAN_FIRE_RL_dec_pipeline,
       CAN_FIRE_getResult,
       CAN_FIRE_inputMessage,
       CAN_FIRE_setKey,
       WILL_FIRE_RL_dec_pipeline,
       WILL_FIRE_getResult,
       WILL_FIRE_inputMessage,
       WILL_FIRE_setKey;

  // inputs to muxes for submodule ports
  wire [23 : 0] MUX_dec_l_0$write_1__VAL_1,
		MUX_dec_l_1$write_1__VAL_1,
		MUX_dec_l_2$write_1__VAL_1;
  wire MUX_dec_l_0$write_1__SEL_1,
       MUX_dec_l_1$write_1__SEL_1,
       MUX_dec_l_2$write_1__SEL_1;

  // remaining internal signals
  reg [23 : 0] SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d528,
	       SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d69;
  wire [23 : 0] IF_24_MINUS_dec_beta_2_3_BIT_2_6_THEN_IF_24_MI_ETC___d110,
		IF_24_MINUS_dec_beta_2_3_BIT_2_6_THEN_IF_24_MI_ETC___d357,
		IF_24_MINUS_dec_beta_2_3_BIT_2_6_THEN_IF_24_MI_ETC___d561,
		IF_24_MINUS_dec_beta_2_3_BIT_2_6_THEN_IF_24_MI_ETC___d805,
		IF_24_MINUS_dec_beta_2_3_BIT_3_5_THEN_IF_24_MI_ETC___d142,
		IF_24_MINUS_dec_beta_2_3_BIT_3_5_THEN_IF_24_MI_ETC___d174,
		IF_24_MINUS_dec_beta_2_3_BIT_3_5_THEN_IF_24_MI_ETC___d389,
		IF_24_MINUS_dec_beta_2_3_BIT_3_5_THEN_IF_24_MI_ETC___d421,
		IF_24_MINUS_dec_beta_2_3_BIT_3_5_THEN_IF_24_MI_ETC___d593,
		IF_24_MINUS_dec_beta_2_3_BIT_3_5_THEN_IF_24_MI_ETC___d625,
		IF_24_MINUS_dec_beta_2_3_BIT_3_5_THEN_IF_24_MI_ETC___d837,
		IF_24_MINUS_dec_beta_2_3_BIT_3_5_THEN_IF_24_MI_ETC___d869,
		IF_dec_alpha_6_BIT_2_9_THEN_IF_dec_alpha_6_BIT_ETC___d204,
		IF_dec_alpha_6_BIT_2_9_THEN_IF_dec_alpha_6_BIT_ETC___d451,
		IF_dec_alpha_6_BIT_2_9_THEN_IF_dec_alpha_6_BIT_ETC___d655,
		IF_dec_alpha_6_BIT_2_9_THEN_IF_dec_alpha_6_BIT_ETC___d899,
		IF_dec_alpha_6_BIT_3_8_THEN_IF_dec_alpha_6_BIT_ETC___d236,
		IF_dec_alpha_6_BIT_3_8_THEN_IF_dec_alpha_6_BIT_ETC___d268,
		IF_dec_alpha_6_BIT_3_8_THEN_IF_dec_alpha_6_BIT_ETC___d483,
		IF_dec_alpha_6_BIT_3_8_THEN_IF_dec_alpha_6_BIT_ETC___d515,
		IF_dec_alpha_6_BIT_3_8_THEN_IF_dec_alpha_6_BIT_ETC___d687,
		IF_dec_alpha_6_BIT_3_8_THEN_IF_dec_alpha_6_BIT_ETC___d719,
		IF_dec_alpha_6_BIT_3_8_THEN_IF_dec_alpha_6_BIT_ETC___d931,
		IF_dec_alpha_6_BIT_3_8_THEN_IF_dec_alpha_6_BIT_ETC___d963,
		IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d324,
		IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d329,
		IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d423,
		IF_dec_round_0_EQ_0_THEN_dec_k0_9_ELSE_dec_rou_ETC___d81,
		IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d773,
		IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d777,
		IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d871,
		IF_dec_round_1_5_EQ_0_6_THEN_dec_k0_9_ELSE_dec_ETC___d532,
		SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d176,
		SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d533,
		SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d627,
		SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d82,
		b__h11765,
		b__h26569,
		b__h33609,
		b__h4695,
		b__h49273,
		b__h56316,
		b__h71075,
		b__h78037,
		x__h3622,
		x__h48970;
  wire [4 : 0] _24_MINUS_dec_beta_2___d73;
  wire NOT_dec_round_0_EQ_0_OR_dec_ciphertextFIFO_not_ETC___d34,
       _dfoo1,
       _dfoo11,
       _dfoo13,
       _dfoo15,
       _dfoo17,
       _dfoo19,
       _dfoo21,
       _dfoo23,
       _dfoo25,
       _dfoo27,
       _dfoo29,
       _dfoo3,
       _dfoo31,
       _dfoo33,
       _dfoo35,
       _dfoo37,
       _dfoo39,
       _dfoo41,
       _dfoo43,
       _dfoo45,
       _dfoo47,
       _dfoo49,
       _dfoo5,
       _dfoo51,
       _dfoo7,
       _dfoo9;

  // action method setKey
  assign RDY_setKey =
	     !dec_ciphertextFIFO$EMPTY_N && dec_round_0 == 24'd0 &&
	     dec_round_1 == 24'd0 ;
  assign CAN_FIRE_setKey =
	     !dec_ciphertextFIFO$EMPTY_N && dec_round_0 == 24'd0 &&
	     dec_round_1 == 24'd0 ;
  assign WILL_FIRE_setKey = EN_setKey ;

  // action method inputMessage
  assign RDY_inputMessage = dec_ciphertextFIFO$FULL_N ;
  assign CAN_FIRE_inputMessage = dec_ciphertextFIFO$FULL_N ;
  assign WILL_FIRE_inputMessage = EN_inputMessage ;

  // actionvalue method getResult
  assign getResult = dec_plaintextFIFO$D_OUT ;
  assign RDY_getResult = dec_plaintextFIFO$EMPTY_N ;
  assign CAN_FIRE_getResult = dec_plaintextFIFO$EMPTY_N ;
  assign WILL_FIRE_getResult = EN_getResult ;

  // submodule dec_ciphertextFIFO
  FIFO2 #(.width(32'd48), .guarded(32'd1)) dec_ciphertextFIFO(.RST(RST_N),
							      .CLK(CLK),
							      .D_IN(dec_ciphertextFIFO$D_IN),
							      .ENQ(dec_ciphertextFIFO$ENQ),
							      .DEQ(dec_ciphertextFIFO$DEQ),
							      .CLR(dec_ciphertextFIFO$CLR),
							      .D_OUT(dec_ciphertextFIFO$D_OUT),
							      .FULL_N(dec_ciphertextFIFO$FULL_N),
							      .EMPTY_N(dec_ciphertextFIFO$EMPTY_N));

  // submodule dec_plaintextFIFO
  FIFO2 #(.width(32'd48), .guarded(32'd1)) dec_plaintextFIFO(.RST(RST_N),
							     .CLK(CLK),
							     .D_IN(dec_plaintextFIFO$D_IN),
							     .ENQ(dec_plaintextFIFO$ENQ),
							     .DEQ(dec_plaintextFIFO$DEQ),
							     .CLR(dec_plaintextFIFO$CLR),
							     .D_OUT(dec_plaintextFIFO$D_OUT),
							     .FULL_N(dec_plaintextFIFO$FULL_N),
							     .EMPTY_N(dec_plaintextFIFO$EMPTY_N));

  // rule RL_dec_pipeline
  assign CAN_FIRE_RL_dec_pipeline =
	     (dec_round_0 == 24'd0 && !dec_ciphertextFIFO$EMPTY_N ||
	      (dec_round_0 != 24'd0 || dec_ciphertextFIFO$EMPTY_N) &&
	      (dec_round_0 != 24'd22 || dec_plaintextFIFO$FULL_N)) &&
	     (dec_ciphertextFIFO$EMPTY_N || dec_round_0 != 24'd0 ||
	      dec_round_1 != 24'd0) ;
  assign WILL_FIRE_RL_dec_pipeline = CAN_FIRE_RL_dec_pipeline ;

  // inputs to muxes for submodule ports
  assign MUX_dec_l_0$write_1__SEL_1 = WILL_FIRE_RL_dec_pipeline && _dfoo51 ;
  assign MUX_dec_l_1$write_1__SEL_1 = WILL_FIRE_RL_dec_pipeline && _dfoo49 ;
  assign MUX_dec_l_2$write_1__SEL_1 = WILL_FIRE_RL_dec_pipeline && _dfoo47 ;
  assign MUX_dec_l_0$write_1__VAL_1 =
	     (x__h3622 == 24'd0 &&
	      NOT_dec_round_0_EQ_0_OR_dec_ciphertextFIFO_not_ETC___d34) ?
	       b__h4695 :
	       b__h49273 ;
  assign MUX_dec_l_1$write_1__VAL_1 =
	     (x__h3622 == 24'd1 &&
	      NOT_dec_round_0_EQ_0_OR_dec_ciphertextFIFO_not_ETC___d34) ?
	       b__h4695 :
	       b__h49273 ;
  assign MUX_dec_l_2$write_1__VAL_1 =
	     (x__h3622 == 24'd2 &&
	      NOT_dec_round_0_EQ_0_OR_dec_ciphertextFIFO_not_ETC___d34) ?
	       b__h4695 :
	       b__h49273 ;

  // register dec_alpha
  assign dec_alpha$D_IN = 5'h0 ;
  assign dec_alpha$EN = 1'b0 ;

  // register dec_beta
  assign dec_beta$D_IN = 5'h0 ;
  assign dec_beta$EN = 1'b0 ;

  // register dec_k0
  assign dec_k0$D_IN = setKey_key[23:0] ;
  assign dec_k0$EN = EN_setKey ;

  // register dec_l_0
  assign dec_l_0$D_IN =
	     MUX_dec_l_0$write_1__SEL_1 ?
	       MUX_dec_l_0$write_1__VAL_1 :
	       setKey_key[47:24] ;
  assign dec_l_0$EN = WILL_FIRE_RL_dec_pipeline && _dfoo51 || EN_setKey ;

  // register dec_l_1
  assign dec_l_1$D_IN =
	     MUX_dec_l_1$write_1__SEL_1 ?
	       MUX_dec_l_1$write_1__VAL_1 :
	       setKey_key[71:48] ;
  assign dec_l_1$EN = WILL_FIRE_RL_dec_pipeline && _dfoo49 || EN_setKey ;

  // register dec_l_10
  assign dec_l_10$D_IN =
	     (x__h3622 == 24'd10 &&
	      NOT_dec_round_0_EQ_0_OR_dec_ciphertextFIFO_not_ETC___d34) ?
	       b__h4695 :
	       b__h49273 ;
  assign dec_l_10$EN = WILL_FIRE_RL_dec_pipeline && _dfoo31 ;

  // register dec_l_11
  assign dec_l_11$D_IN =
	     (x__h3622 == 24'd11 &&
	      NOT_dec_round_0_EQ_0_OR_dec_ciphertextFIFO_not_ETC___d34) ?
	       b__h4695 :
	       b__h49273 ;
  assign dec_l_11$EN = WILL_FIRE_RL_dec_pipeline && _dfoo29 ;

  // register dec_l_12
  assign dec_l_12$D_IN =
	     (x__h3622 == 24'd12 &&
	      NOT_dec_round_0_EQ_0_OR_dec_ciphertextFIFO_not_ETC___d34) ?
	       b__h4695 :
	       b__h49273 ;
  assign dec_l_12$EN = WILL_FIRE_RL_dec_pipeline && _dfoo27 ;

  // register dec_l_13
  assign dec_l_13$D_IN =
	     (x__h3622 == 24'd13 &&
	      NOT_dec_round_0_EQ_0_OR_dec_ciphertextFIFO_not_ETC___d34) ?
	       b__h4695 :
	       b__h49273 ;
  assign dec_l_13$EN = WILL_FIRE_RL_dec_pipeline && _dfoo25 ;

  // register dec_l_14
  assign dec_l_14$D_IN =
	     (x__h3622 == 24'd14 &&
	      NOT_dec_round_0_EQ_0_OR_dec_ciphertextFIFO_not_ETC___d34) ?
	       b__h4695 :
	       b__h49273 ;
  assign dec_l_14$EN = WILL_FIRE_RL_dec_pipeline && _dfoo23 ;

  // register dec_l_15
  assign dec_l_15$D_IN =
	     (x__h3622 == 24'd15 &&
	      NOT_dec_round_0_EQ_0_OR_dec_ciphertextFIFO_not_ETC___d34) ?
	       b__h4695 :
	       b__h49273 ;
  assign dec_l_15$EN = WILL_FIRE_RL_dec_pipeline && _dfoo21 ;

  // register dec_l_16
  assign dec_l_16$D_IN =
	     (x__h3622 == 24'd16 &&
	      NOT_dec_round_0_EQ_0_OR_dec_ciphertextFIFO_not_ETC___d34) ?
	       b__h4695 :
	       b__h49273 ;
  assign dec_l_16$EN = WILL_FIRE_RL_dec_pipeline && _dfoo19 ;

  // register dec_l_17
  assign dec_l_17$D_IN =
	     (x__h3622 == 24'd17 &&
	      NOT_dec_round_0_EQ_0_OR_dec_ciphertextFIFO_not_ETC___d34) ?
	       b__h4695 :
	       b__h49273 ;
  assign dec_l_17$EN = WILL_FIRE_RL_dec_pipeline && _dfoo17 ;

  // register dec_l_18
  assign dec_l_18$D_IN =
	     (x__h3622 == 24'd18 &&
	      NOT_dec_round_0_EQ_0_OR_dec_ciphertextFIFO_not_ETC___d34) ?
	       b__h4695 :
	       b__h49273 ;
  assign dec_l_18$EN = WILL_FIRE_RL_dec_pipeline && _dfoo15 ;

  // register dec_l_19
  assign dec_l_19$D_IN =
	     (x__h3622 == 24'd19 &&
	      NOT_dec_round_0_EQ_0_OR_dec_ciphertextFIFO_not_ETC___d34) ?
	       b__h4695 :
	       b__h49273 ;
  assign dec_l_19$EN = WILL_FIRE_RL_dec_pipeline && _dfoo13 ;

  // register dec_l_2
  assign dec_l_2$D_IN =
	     MUX_dec_l_2$write_1__SEL_1 ?
	       MUX_dec_l_2$write_1__VAL_1 :
	       setKey_key[95:72] ;
  assign dec_l_2$EN = WILL_FIRE_RL_dec_pipeline && _dfoo47 || EN_setKey ;

  // register dec_l_20
  assign dec_l_20$D_IN =
	     (x__h3622 == 24'd20 &&
	      NOT_dec_round_0_EQ_0_OR_dec_ciphertextFIFO_not_ETC___d34) ?
	       b__h4695 :
	       b__h49273 ;
  assign dec_l_20$EN = WILL_FIRE_RL_dec_pipeline && _dfoo11 ;

  // register dec_l_21
  assign dec_l_21$D_IN =
	     (x__h3622 == 24'd21 &&
	      NOT_dec_round_0_EQ_0_OR_dec_ciphertextFIFO_not_ETC___d34) ?
	       b__h4695 :
	       b__h49273 ;
  assign dec_l_21$EN = WILL_FIRE_RL_dec_pipeline && _dfoo9 ;

  // register dec_l_22
  assign dec_l_22$D_IN =
	     (x__h3622 == 24'd22 &&
	      NOT_dec_round_0_EQ_0_OR_dec_ciphertextFIFO_not_ETC___d34) ?
	       b__h4695 :
	       b__h49273 ;
  assign dec_l_22$EN = WILL_FIRE_RL_dec_pipeline && _dfoo7 ;

  // register dec_l_23
  assign dec_l_23$D_IN =
	     (x__h3622 == 24'd23 &&
	      NOT_dec_round_0_EQ_0_OR_dec_ciphertextFIFO_not_ETC___d34) ?
	       b__h4695 :
	       b__h49273 ;
  assign dec_l_23$EN = WILL_FIRE_RL_dec_pipeline && _dfoo5 ;

  // register dec_l_24
  assign dec_l_24$D_IN =
	     (x__h3622 == 24'd24 &&
	      NOT_dec_round_0_EQ_0_OR_dec_ciphertextFIFO_not_ETC___d34) ?
	       b__h4695 :
	       b__h49273 ;
  assign dec_l_24$EN = WILL_FIRE_RL_dec_pipeline && _dfoo3 ;

  // register dec_l_25
  assign dec_l_25$D_IN =
	     (x__h3622 == 24'd25 &&
	      NOT_dec_round_0_EQ_0_OR_dec_ciphertextFIFO_not_ETC___d34) ?
	       b__h4695 :
	       b__h49273 ;
  assign dec_l_25$EN = WILL_FIRE_RL_dec_pipeline && _dfoo1 ;

  // register dec_l_3
  assign dec_l_3$D_IN =
	     (x__h3622 == 24'd3 &&
	      NOT_dec_round_0_EQ_0_OR_dec_ciphertextFIFO_not_ETC___d34) ?
	       b__h4695 :
	       b__h49273 ;
  assign dec_l_3$EN = WILL_FIRE_RL_dec_pipeline && _dfoo45 ;

  // register dec_l_4
  assign dec_l_4$D_IN =
	     (x__h3622 == 24'd4 &&
	      NOT_dec_round_0_EQ_0_OR_dec_ciphertextFIFO_not_ETC___d34) ?
	       b__h4695 :
	       b__h49273 ;
  assign dec_l_4$EN = WILL_FIRE_RL_dec_pipeline && _dfoo43 ;

  // register dec_l_5
  assign dec_l_5$D_IN =
	     (x__h3622 == 24'd5 &&
	      NOT_dec_round_0_EQ_0_OR_dec_ciphertextFIFO_not_ETC___d34) ?
	       b__h4695 :
	       b__h49273 ;
  assign dec_l_5$EN = WILL_FIRE_RL_dec_pipeline && _dfoo41 ;

  // register dec_l_6
  assign dec_l_6$D_IN =
	     (x__h3622 == 24'd6 &&
	      NOT_dec_round_0_EQ_0_OR_dec_ciphertextFIFO_not_ETC___d34) ?
	       b__h4695 :
	       b__h49273 ;
  assign dec_l_6$EN = WILL_FIRE_RL_dec_pipeline && _dfoo39 ;

  // register dec_l_7
  assign dec_l_7$D_IN =
	     (x__h3622 == 24'd7 &&
	      NOT_dec_round_0_EQ_0_OR_dec_ciphertextFIFO_not_ETC___d34) ?
	       b__h4695 :
	       b__h49273 ;
  assign dec_l_7$EN = WILL_FIRE_RL_dec_pipeline && _dfoo37 ;

  // register dec_l_8
  assign dec_l_8$D_IN =
	     (x__h3622 == 24'd8 &&
	      NOT_dec_round_0_EQ_0_OR_dec_ciphertextFIFO_not_ETC___d34) ?
	       b__h4695 :
	       b__h49273 ;
  assign dec_l_8$EN = WILL_FIRE_RL_dec_pipeline && _dfoo35 ;

  // register dec_l_9
  assign dec_l_9$D_IN =
	     (x__h3622 == 24'd9 &&
	      NOT_dec_round_0_EQ_0_OR_dec_ciphertextFIFO_not_ETC___d34) ?
	       b__h4695 :
	       b__h49273 ;
  assign dec_l_9$EN = WILL_FIRE_RL_dec_pipeline && _dfoo33 ;

  // register dec_round_0
  assign dec_round_0$D_IN =
	     (dec_round_1 == 24'd0) ? dec_round_1 : dec_round_1 + 24'd1 ;
  assign dec_round_0$EN = CAN_FIRE_RL_dec_pipeline ;

  // register dec_round_1
  assign dec_round_1$D_IN =
	     (dec_round_0 == 24'd0 && !dec_ciphertextFIFO$EMPTY_N ||
	      dec_round_0 == 24'd22) ?
	       24'd0 :
	       dec_round_0 + 24'd1 ;
  assign dec_round_1$EN = CAN_FIRE_RL_dec_pipeline ;

  // register dec_roundkey_0
  assign dec_roundkey_0$D_IN = b__h56316 ;
  assign dec_roundkey_0$EN =
	     WILL_FIRE_RL_dec_pipeline && dec_round_1 != 24'd0 ;

  // register dec_roundkey_1
  assign dec_roundkey_1$D_IN = b__h11765 ;
  assign dec_roundkey_1$EN =
	     WILL_FIRE_RL_dec_pipeline &&
	     (dec_round_0 != 24'd0 || dec_ciphertextFIFO$EMPTY_N) &&
	     dec_round_0 != 24'd22 ;

  // register dec_xyReg_0
  assign dec_xyReg_0$D_IN = { b__h71075, b__h78037 } ;
  assign dec_xyReg_0$EN = WILL_FIRE_RL_dec_pipeline && dec_round_1 != 24'd0 ;

  // register dec_xyReg_1
  assign dec_xyReg_1$D_IN = { b__h26569, b__h33609 } ;
  assign dec_xyReg_1$EN =
	     WILL_FIRE_RL_dec_pipeline &&
	     (dec_round_0 != 24'd0 || dec_ciphertextFIFO$EMPTY_N) &&
	     dec_round_0 != 24'd22 ;

  // submodule dec_ciphertextFIFO
  assign dec_ciphertextFIFO$D_IN = inputMessage_text ;
  assign dec_ciphertextFIFO$ENQ = EN_inputMessage ;
  assign dec_ciphertextFIFO$DEQ =
	     WILL_FIRE_RL_dec_pipeline && dec_ciphertextFIFO$EMPTY_N &&
	     dec_round_0 == 24'd0 ;
  assign dec_ciphertextFIFO$CLR = 1'b0 ;

  // submodule dec_plaintextFIFO
  assign dec_plaintextFIFO$D_IN = { b__h26569, b__h33609 } ;
  assign dec_plaintextFIFO$ENQ =
	     WILL_FIRE_RL_dec_pipeline && dec_round_0 == 24'd22 ;
  assign dec_plaintextFIFO$DEQ = EN_getResult ;
  assign dec_plaintextFIFO$CLR = 1'b0 ;

  // remaining internal signals
  assign IF_24_MINUS_dec_beta_2_3_BIT_2_6_THEN_IF_24_MI_ETC___d110 =
	     _24_MINUS_dec_beta_2___d73[2] ?
	       (_24_MINUS_dec_beta_2___d73[1] ?
		  (_24_MINUS_dec_beta_2___d73[0] ?
		     { SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d82[16:0],
		       SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d82[23:17] } :
		     { SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d82[17:0],
		       SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d82[23:18] }) :
		  (_24_MINUS_dec_beta_2___d73[0] ?
		     { SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d82[18:0],
		       SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d82[23:19] } :
		     { SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d82[19:0],
		       SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d82[23:20] })) :
	       (_24_MINUS_dec_beta_2___d73[1] ?
		  (_24_MINUS_dec_beta_2___d73[0] ?
		     { SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d82[20:0],
		       SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d82[23:21] } :
		     { SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d82[21:0],
		       SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d82[23:22] }) :
		  (_24_MINUS_dec_beta_2___d73[0] ?
		     { SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d82[22:0],
		       SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d82[23] } :
		     SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d82)) ;
  assign IF_24_MINUS_dec_beta_2_3_BIT_2_6_THEN_IF_24_MI_ETC___d357 =
	     _24_MINUS_dec_beta_2___d73[2] ?
	       (_24_MINUS_dec_beta_2___d73[1] ?
		  (_24_MINUS_dec_beta_2___d73[0] ?
		     { IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d329[16:0],
		       IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d329[23:17] } :
		     { IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d329[17:0],
		       IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d329[23:18] }) :
		  (_24_MINUS_dec_beta_2___d73[0] ?
		     { IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d329[18:0],
		       IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d329[23:19] } :
		     { IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d329[19:0],
		       IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d329[23:20] })) :
	       (_24_MINUS_dec_beta_2___d73[1] ?
		  (_24_MINUS_dec_beta_2___d73[0] ?
		     { IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d329[20:0],
		       IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d329[23:21] } :
		     { IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d329[21:0],
		       IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d329[23:22] }) :
		  (_24_MINUS_dec_beta_2___d73[0] ?
		     { IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d329[22:0],
		       IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d329[23] } :
		     IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d329)) ;
  assign IF_24_MINUS_dec_beta_2_3_BIT_2_6_THEN_IF_24_MI_ETC___d561 =
	     _24_MINUS_dec_beta_2___d73[2] ?
	       (_24_MINUS_dec_beta_2___d73[1] ?
		  (_24_MINUS_dec_beta_2___d73[0] ?
		     { SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d533[16:0],
		       SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d533[23:17] } :
		     { SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d533[17:0],
		       SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d533[23:18] }) :
		  (_24_MINUS_dec_beta_2___d73[0] ?
		     { SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d533[18:0],
		       SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d533[23:19] } :
		     { SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d533[19:0],
		       SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d533[23:20] })) :
	       (_24_MINUS_dec_beta_2___d73[1] ?
		  (_24_MINUS_dec_beta_2___d73[0] ?
		     { SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d533[20:0],
		       SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d533[23:21] } :
		     { SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d533[21:0],
		       SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d533[23:22] }) :
		  (_24_MINUS_dec_beta_2___d73[0] ?
		     { SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d533[22:0],
		       SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d533[23] } :
		     SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d533)) ;
  assign IF_24_MINUS_dec_beta_2_3_BIT_2_6_THEN_IF_24_MI_ETC___d805 =
	     _24_MINUS_dec_beta_2___d73[2] ?
	       (_24_MINUS_dec_beta_2___d73[1] ?
		  (_24_MINUS_dec_beta_2___d73[0] ?
		     { IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d777[16:0],
		       IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d777[23:17] } :
		     { IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d777[17:0],
		       IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d777[23:18] }) :
		  (_24_MINUS_dec_beta_2___d73[0] ?
		     { IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d777[18:0],
		       IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d777[23:19] } :
		     { IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d777[19:0],
		       IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d777[23:20] })) :
	       (_24_MINUS_dec_beta_2___d73[1] ?
		  (_24_MINUS_dec_beta_2___d73[0] ?
		     { IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d777[20:0],
		       IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d777[23:21] } :
		     { IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d777[21:0],
		       IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d777[23:22] }) :
		  (_24_MINUS_dec_beta_2___d73[0] ?
		     { IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d777[22:0],
		       IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d777[23] } :
		     IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d777)) ;
  assign IF_24_MINUS_dec_beta_2_3_BIT_3_5_THEN_IF_24_MI_ETC___d142 =
	     _24_MINUS_dec_beta_2___d73[3] ?
	       IF_24_MINUS_dec_beta_2_3_BIT_2_6_THEN_IF_24_MI_ETC___d110 :
	       (_24_MINUS_dec_beta_2___d73[2] ?
		  (_24_MINUS_dec_beta_2___d73[1] ?
		     (_24_MINUS_dec_beta_2___d73[0] ?
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d82[0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d82[23:1] } :
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d82[1:0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d82[23:2] }) :
		     (_24_MINUS_dec_beta_2___d73[0] ?
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d82[2:0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d82[23:3] } :
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d82[3:0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d82[23:4] })) :
		  (_24_MINUS_dec_beta_2___d73[1] ?
		     (_24_MINUS_dec_beta_2___d73[0] ?
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d82[4:0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d82[23:5] } :
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d82[5:0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d82[23:6] }) :
		     (_24_MINUS_dec_beta_2___d73[0] ?
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d82[6:0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d82[23:7] } :
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d82[7:0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d82[23:8] }))) ;
  assign IF_24_MINUS_dec_beta_2_3_BIT_3_5_THEN_IF_24_MI_ETC___d174 =
	     _24_MINUS_dec_beta_2___d73[3] ?
	       (_24_MINUS_dec_beta_2___d73[2] ?
		  (_24_MINUS_dec_beta_2___d73[1] ?
		     (_24_MINUS_dec_beta_2___d73[0] ?
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d82[8:0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d82[23:9] } :
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d82[9:0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d82[23:10] }) :
		     (_24_MINUS_dec_beta_2___d73[0] ?
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d82[10:0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d82[23:11] } :
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d82[11:0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d82[23:12] })) :
		  (_24_MINUS_dec_beta_2___d73[1] ?
		     (_24_MINUS_dec_beta_2___d73[0] ?
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d82[12:0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d82[23:13] } :
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d82[13:0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d82[23:14] }) :
		     (_24_MINUS_dec_beta_2___d73[0] ?
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d82[14:0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d82[23:15] } :
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d82[15:0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d82[23:16] }))) :
	       IF_24_MINUS_dec_beta_2_3_BIT_2_6_THEN_IF_24_MI_ETC___d110 ;
  assign IF_24_MINUS_dec_beta_2_3_BIT_3_5_THEN_IF_24_MI_ETC___d389 =
	     _24_MINUS_dec_beta_2___d73[3] ?
	       IF_24_MINUS_dec_beta_2_3_BIT_2_6_THEN_IF_24_MI_ETC___d357 :
	       (_24_MINUS_dec_beta_2___d73[2] ?
		  (_24_MINUS_dec_beta_2___d73[1] ?
		     (_24_MINUS_dec_beta_2___d73[0] ?
			{ IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d329[0],
			  IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d329[23:1] } :
			{ IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d329[1:0],
			  IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d329[23:2] }) :
		     (_24_MINUS_dec_beta_2___d73[0] ?
			{ IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d329[2:0],
			  IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d329[23:3] } :
			{ IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d329[3:0],
			  IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d329[23:4] })) :
		  (_24_MINUS_dec_beta_2___d73[1] ?
		     (_24_MINUS_dec_beta_2___d73[0] ?
			{ IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d329[4:0],
			  IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d329[23:5] } :
			{ IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d329[5:0],
			  IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d329[23:6] }) :
		     (_24_MINUS_dec_beta_2___d73[0] ?
			{ IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d329[6:0],
			  IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d329[23:7] } :
			{ IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d329[7:0],
			  IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d329[23:8] }))) ;
  assign IF_24_MINUS_dec_beta_2_3_BIT_3_5_THEN_IF_24_MI_ETC___d421 =
	     _24_MINUS_dec_beta_2___d73[3] ?
	       (_24_MINUS_dec_beta_2___d73[2] ?
		  (_24_MINUS_dec_beta_2___d73[1] ?
		     (_24_MINUS_dec_beta_2___d73[0] ?
			{ IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d329[8:0],
			  IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d329[23:9] } :
			{ IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d329[9:0],
			  IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d329[23:10] }) :
		     (_24_MINUS_dec_beta_2___d73[0] ?
			{ IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d329[10:0],
			  IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d329[23:11] } :
			{ IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d329[11:0],
			  IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d329[23:12] })) :
		  (_24_MINUS_dec_beta_2___d73[1] ?
		     (_24_MINUS_dec_beta_2___d73[0] ?
			{ IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d329[12:0],
			  IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d329[23:13] } :
			{ IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d329[13:0],
			  IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d329[23:14] }) :
		     (_24_MINUS_dec_beta_2___d73[0] ?
			{ IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d329[14:0],
			  IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d329[23:15] } :
			{ IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d329[15:0],
			  IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d329[23:16] }))) :
	       IF_24_MINUS_dec_beta_2_3_BIT_2_6_THEN_IF_24_MI_ETC___d357 ;
  assign IF_24_MINUS_dec_beta_2_3_BIT_3_5_THEN_IF_24_MI_ETC___d593 =
	     _24_MINUS_dec_beta_2___d73[3] ?
	       IF_24_MINUS_dec_beta_2_3_BIT_2_6_THEN_IF_24_MI_ETC___d561 :
	       (_24_MINUS_dec_beta_2___d73[2] ?
		  (_24_MINUS_dec_beta_2___d73[1] ?
		     (_24_MINUS_dec_beta_2___d73[0] ?
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d533[0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d533[23:1] } :
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d533[1:0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d533[23:2] }) :
		     (_24_MINUS_dec_beta_2___d73[0] ?
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d533[2:0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d533[23:3] } :
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d533[3:0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d533[23:4] })) :
		  (_24_MINUS_dec_beta_2___d73[1] ?
		     (_24_MINUS_dec_beta_2___d73[0] ?
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d533[4:0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d533[23:5] } :
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d533[5:0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d533[23:6] }) :
		     (_24_MINUS_dec_beta_2___d73[0] ?
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d533[6:0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d533[23:7] } :
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d533[7:0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d533[23:8] }))) ;
  assign IF_24_MINUS_dec_beta_2_3_BIT_3_5_THEN_IF_24_MI_ETC___d625 =
	     _24_MINUS_dec_beta_2___d73[3] ?
	       (_24_MINUS_dec_beta_2___d73[2] ?
		  (_24_MINUS_dec_beta_2___d73[1] ?
		     (_24_MINUS_dec_beta_2___d73[0] ?
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d533[8:0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d533[23:9] } :
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d533[9:0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d533[23:10] }) :
		     (_24_MINUS_dec_beta_2___d73[0] ?
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d533[10:0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d533[23:11] } :
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d533[11:0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d533[23:12] })) :
		  (_24_MINUS_dec_beta_2___d73[1] ?
		     (_24_MINUS_dec_beta_2___d73[0] ?
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d533[12:0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d533[23:13] } :
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d533[13:0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d533[23:14] }) :
		     (_24_MINUS_dec_beta_2___d73[0] ?
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d533[14:0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d533[23:15] } :
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d533[15:0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d533[23:16] }))) :
	       IF_24_MINUS_dec_beta_2_3_BIT_2_6_THEN_IF_24_MI_ETC___d561 ;
  assign IF_24_MINUS_dec_beta_2_3_BIT_3_5_THEN_IF_24_MI_ETC___d837 =
	     _24_MINUS_dec_beta_2___d73[3] ?
	       IF_24_MINUS_dec_beta_2_3_BIT_2_6_THEN_IF_24_MI_ETC___d805 :
	       (_24_MINUS_dec_beta_2___d73[2] ?
		  (_24_MINUS_dec_beta_2___d73[1] ?
		     (_24_MINUS_dec_beta_2___d73[0] ?
			{ IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d777[0],
			  IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d777[23:1] } :
			{ IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d777[1:0],
			  IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d777[23:2] }) :
		     (_24_MINUS_dec_beta_2___d73[0] ?
			{ IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d777[2:0],
			  IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d777[23:3] } :
			{ IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d777[3:0],
			  IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d777[23:4] })) :
		  (_24_MINUS_dec_beta_2___d73[1] ?
		     (_24_MINUS_dec_beta_2___d73[0] ?
			{ IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d777[4:0],
			  IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d777[23:5] } :
			{ IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d777[5:0],
			  IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d777[23:6] }) :
		     (_24_MINUS_dec_beta_2___d73[0] ?
			{ IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d777[6:0],
			  IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d777[23:7] } :
			{ IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d777[7:0],
			  IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d777[23:8] }))) ;
  assign IF_24_MINUS_dec_beta_2_3_BIT_3_5_THEN_IF_24_MI_ETC___d869 =
	     _24_MINUS_dec_beta_2___d73[3] ?
	       (_24_MINUS_dec_beta_2___d73[2] ?
		  (_24_MINUS_dec_beta_2___d73[1] ?
		     (_24_MINUS_dec_beta_2___d73[0] ?
			{ IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d777[8:0],
			  IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d777[23:9] } :
			{ IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d777[9:0],
			  IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d777[23:10] }) :
		     (_24_MINUS_dec_beta_2___d73[0] ?
			{ IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d777[10:0],
			  IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d777[23:11] } :
			{ IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d777[11:0],
			  IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d777[23:12] })) :
		  (_24_MINUS_dec_beta_2___d73[1] ?
		     (_24_MINUS_dec_beta_2___d73[0] ?
			{ IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d777[12:0],
			  IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d777[23:13] } :
			{ IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d777[13:0],
			  IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d777[23:14] }) :
		     (_24_MINUS_dec_beta_2___d73[0] ?
			{ IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d777[14:0],
			  IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d777[23:15] } :
			{ IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d777[15:0],
			  IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d777[23:16] }))) :
	       IF_24_MINUS_dec_beta_2_3_BIT_2_6_THEN_IF_24_MI_ETC___d805 ;
  assign IF_dec_alpha_6_BIT_2_9_THEN_IF_dec_alpha_6_BIT_ETC___d204 =
	     dec_alpha[2] ?
	       (dec_alpha[1] ?
		  (dec_alpha[0] ?
		     { SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d176[16:0],
		       SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d176[23:17] } :
		     { SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d176[17:0],
		       SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d176[23:18] }) :
		  (dec_alpha[0] ?
		     { SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d176[18:0],
		       SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d176[23:19] } :
		     { SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d176[19:0],
		       SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d176[23:20] })) :
	       (dec_alpha[1] ?
		  (dec_alpha[0] ?
		     { SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d176[20:0],
		       SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d176[23:21] } :
		     { SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d176[21:0],
		       SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d176[23:22] }) :
		  (dec_alpha[0] ?
		     { SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d176[22:0],
		       SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d176[23] } :
		     SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d176)) ;
  assign IF_dec_alpha_6_BIT_2_9_THEN_IF_dec_alpha_6_BIT_ETC___d451 =
	     dec_alpha[2] ?
	       (dec_alpha[1] ?
		  (dec_alpha[0] ?
		     { IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d423[16:0],
		       IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d423[23:17] } :
		     { IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d423[17:0],
		       IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d423[23:18] }) :
		  (dec_alpha[0] ?
		     { IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d423[18:0],
		       IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d423[23:19] } :
		     { IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d423[19:0],
		       IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d423[23:20] })) :
	       (dec_alpha[1] ?
		  (dec_alpha[0] ?
		     { IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d423[20:0],
		       IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d423[23:21] } :
		     { IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d423[21:0],
		       IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d423[23:22] }) :
		  (dec_alpha[0] ?
		     { IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d423[22:0],
		       IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d423[23] } :
		     IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d423)) ;
  assign IF_dec_alpha_6_BIT_2_9_THEN_IF_dec_alpha_6_BIT_ETC___d655 =
	     dec_alpha[2] ?
	       (dec_alpha[1] ?
		  (dec_alpha[0] ?
		     { SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d627[16:0],
		       SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d627[23:17] } :
		     { SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d627[17:0],
		       SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d627[23:18] }) :
		  (dec_alpha[0] ?
		     { SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d627[18:0],
		       SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d627[23:19] } :
		     { SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d627[19:0],
		       SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d627[23:20] })) :
	       (dec_alpha[1] ?
		  (dec_alpha[0] ?
		     { SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d627[20:0],
		       SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d627[23:21] } :
		     { SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d627[21:0],
		       SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d627[23:22] }) :
		  (dec_alpha[0] ?
		     { SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d627[22:0],
		       SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d627[23] } :
		     SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d627)) ;
  assign IF_dec_alpha_6_BIT_2_9_THEN_IF_dec_alpha_6_BIT_ETC___d899 =
	     dec_alpha[2] ?
	       (dec_alpha[1] ?
		  (dec_alpha[0] ?
		     { IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d871[16:0],
		       IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d871[23:17] } :
		     { IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d871[17:0],
		       IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d871[23:18] }) :
		  (dec_alpha[0] ?
		     { IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d871[18:0],
		       IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d871[23:19] } :
		     { IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d871[19:0],
		       IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d871[23:20] })) :
	       (dec_alpha[1] ?
		  (dec_alpha[0] ?
		     { IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d871[20:0],
		       IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d871[23:21] } :
		     { IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d871[21:0],
		       IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d871[23:22] }) :
		  (dec_alpha[0] ?
		     { IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d871[22:0],
		       IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d871[23] } :
		     IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d871)) ;
  assign IF_dec_alpha_6_BIT_3_8_THEN_IF_dec_alpha_6_BIT_ETC___d236 =
	     dec_alpha[3] ?
	       IF_dec_alpha_6_BIT_2_9_THEN_IF_dec_alpha_6_BIT_ETC___d204 :
	       (dec_alpha[2] ?
		  (dec_alpha[1] ?
		     (dec_alpha[0] ?
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d176[0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d176[23:1] } :
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d176[1:0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d176[23:2] }) :
		     (dec_alpha[0] ?
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d176[2:0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d176[23:3] } :
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d176[3:0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d176[23:4] })) :
		  (dec_alpha[1] ?
		     (dec_alpha[0] ?
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d176[4:0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d176[23:5] } :
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d176[5:0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d176[23:6] }) :
		     (dec_alpha[0] ?
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d176[6:0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d176[23:7] } :
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d176[7:0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d176[23:8] }))) ;
  assign IF_dec_alpha_6_BIT_3_8_THEN_IF_dec_alpha_6_BIT_ETC___d268 =
	     dec_alpha[3] ?
	       (dec_alpha[2] ?
		  (dec_alpha[1] ?
		     (dec_alpha[0] ?
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d176[8:0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d176[23:9] } :
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d176[9:0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d176[23:10] }) :
		     (dec_alpha[0] ?
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d176[10:0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d176[23:11] } :
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d176[11:0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d176[23:12] })) :
		  (dec_alpha[1] ?
		     (dec_alpha[0] ?
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d176[12:0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d176[23:13] } :
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d176[13:0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d176[23:14] }) :
		     (dec_alpha[0] ?
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d176[14:0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d176[23:15] } :
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d176[15:0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d176[23:16] }))) :
	       IF_dec_alpha_6_BIT_2_9_THEN_IF_dec_alpha_6_BIT_ETC___d204 ;
  assign IF_dec_alpha_6_BIT_3_8_THEN_IF_dec_alpha_6_BIT_ETC___d483 =
	     dec_alpha[3] ?
	       IF_dec_alpha_6_BIT_2_9_THEN_IF_dec_alpha_6_BIT_ETC___d451 :
	       (dec_alpha[2] ?
		  (dec_alpha[1] ?
		     (dec_alpha[0] ?
			{ IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d423[0],
			  IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d423[23:1] } :
			{ IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d423[1:0],
			  IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d423[23:2] }) :
		     (dec_alpha[0] ?
			{ IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d423[2:0],
			  IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d423[23:3] } :
			{ IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d423[3:0],
			  IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d423[23:4] })) :
		  (dec_alpha[1] ?
		     (dec_alpha[0] ?
			{ IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d423[4:0],
			  IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d423[23:5] } :
			{ IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d423[5:0],
			  IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d423[23:6] }) :
		     (dec_alpha[0] ?
			{ IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d423[6:0],
			  IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d423[23:7] } :
			{ IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d423[7:0],
			  IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d423[23:8] }))) ;
  assign IF_dec_alpha_6_BIT_3_8_THEN_IF_dec_alpha_6_BIT_ETC___d515 =
	     dec_alpha[3] ?
	       (dec_alpha[2] ?
		  (dec_alpha[1] ?
		     (dec_alpha[0] ?
			{ IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d423[8:0],
			  IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d423[23:9] } :
			{ IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d423[9:0],
			  IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d423[23:10] }) :
		     (dec_alpha[0] ?
			{ IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d423[10:0],
			  IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d423[23:11] } :
			{ IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d423[11:0],
			  IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d423[23:12] })) :
		  (dec_alpha[1] ?
		     (dec_alpha[0] ?
			{ IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d423[12:0],
			  IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d423[23:13] } :
			{ IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d423[13:0],
			  IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d423[23:14] }) :
		     (dec_alpha[0] ?
			{ IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d423[14:0],
			  IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d423[23:15] } :
			{ IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d423[15:0],
			  IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d423[23:16] }))) :
	       IF_dec_alpha_6_BIT_2_9_THEN_IF_dec_alpha_6_BIT_ETC___d451 ;
  assign IF_dec_alpha_6_BIT_3_8_THEN_IF_dec_alpha_6_BIT_ETC___d687 =
	     dec_alpha[3] ?
	       IF_dec_alpha_6_BIT_2_9_THEN_IF_dec_alpha_6_BIT_ETC___d655 :
	       (dec_alpha[2] ?
		  (dec_alpha[1] ?
		     (dec_alpha[0] ?
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d627[0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d627[23:1] } :
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d627[1:0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d627[23:2] }) :
		     (dec_alpha[0] ?
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d627[2:0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d627[23:3] } :
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d627[3:0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d627[23:4] })) :
		  (dec_alpha[1] ?
		     (dec_alpha[0] ?
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d627[4:0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d627[23:5] } :
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d627[5:0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d627[23:6] }) :
		     (dec_alpha[0] ?
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d627[6:0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d627[23:7] } :
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d627[7:0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d627[23:8] }))) ;
  assign IF_dec_alpha_6_BIT_3_8_THEN_IF_dec_alpha_6_BIT_ETC___d719 =
	     dec_alpha[3] ?
	       (dec_alpha[2] ?
		  (dec_alpha[1] ?
		     (dec_alpha[0] ?
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d627[8:0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d627[23:9] } :
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d627[9:0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d627[23:10] }) :
		     (dec_alpha[0] ?
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d627[10:0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d627[23:11] } :
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d627[11:0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d627[23:12] })) :
		  (dec_alpha[1] ?
		     (dec_alpha[0] ?
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d627[12:0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d627[23:13] } :
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d627[13:0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d627[23:14] }) :
		     (dec_alpha[0] ?
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d627[14:0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d627[23:15] } :
			{ SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d627[15:0],
			  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d627[23:16] }))) :
	       IF_dec_alpha_6_BIT_2_9_THEN_IF_dec_alpha_6_BIT_ETC___d655 ;
  assign IF_dec_alpha_6_BIT_3_8_THEN_IF_dec_alpha_6_BIT_ETC___d931 =
	     dec_alpha[3] ?
	       IF_dec_alpha_6_BIT_2_9_THEN_IF_dec_alpha_6_BIT_ETC___d899 :
	       (dec_alpha[2] ?
		  (dec_alpha[1] ?
		     (dec_alpha[0] ?
			{ IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d871[0],
			  IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d871[23:1] } :
			{ IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d871[1:0],
			  IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d871[23:2] }) :
		     (dec_alpha[0] ?
			{ IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d871[2:0],
			  IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d871[23:3] } :
			{ IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d871[3:0],
			  IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d871[23:4] })) :
		  (dec_alpha[1] ?
		     (dec_alpha[0] ?
			{ IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d871[4:0],
			  IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d871[23:5] } :
			{ IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d871[5:0],
			  IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d871[23:6] }) :
		     (dec_alpha[0] ?
			{ IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d871[6:0],
			  IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d871[23:7] } :
			{ IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d871[7:0],
			  IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d871[23:8] }))) ;
  assign IF_dec_alpha_6_BIT_3_8_THEN_IF_dec_alpha_6_BIT_ETC___d963 =
	     dec_alpha[3] ?
	       (dec_alpha[2] ?
		  (dec_alpha[1] ?
		     (dec_alpha[0] ?
			{ IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d871[8:0],
			  IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d871[23:9] } :
			{ IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d871[9:0],
			  IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d871[23:10] }) :
		     (dec_alpha[0] ?
			{ IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d871[10:0],
			  IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d871[23:11] } :
			{ IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d871[11:0],
			  IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d871[23:12] })) :
		  (dec_alpha[1] ?
		     (dec_alpha[0] ?
			{ IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d871[12:0],
			  IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d871[23:13] } :
			{ IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d871[13:0],
			  IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d871[23:14] }) :
		     (dec_alpha[0] ?
			{ IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d871[14:0],
			  IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d871[23:15] } :
			{ IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d871[15:0],
			  IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d871[23:16] }))) :
	       IF_dec_alpha_6_BIT_2_9_THEN_IF_dec_alpha_6_BIT_ETC___d899 ;
  assign IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d324 =
	     (dec_round_0 == 24'd0) ?
	       dec_ciphertextFIFO$D_OUT[47:24] :
	       dec_xyReg_0[47:24] ;
  assign IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d329 =
	     IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d324 ^
	     ((dec_round_0 == 24'd0) ?
		dec_ciphertextFIFO$D_OUT[23:0] :
		dec_xyReg_0[23:0]) ;
  assign IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d423 =
	     (IF_dec_round_0_EQ_0_THEN_dec_ciphertextFIFO_fi_ETC___d324 ^
	      IF_dec_round_0_EQ_0_THEN_dec_k0_9_ELSE_dec_rou_ETC___d81) -
	     b__h33609 ;
  assign IF_dec_round_0_EQ_0_THEN_dec_k0_9_ELSE_dec_rou_ETC___d81 =
	     (dec_round_0 == 24'd0) ? dec_k0 : dec_roundkey_0 ;
  assign IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d773 =
	     (dec_round_1 == 24'd0) ?
	       dec_ciphertextFIFO$D_OUT[47:24] :
	       dec_xyReg_1[47:24] ;
  assign IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d777 =
	     IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d773 ^
	     ((dec_round_1 == 24'd0) ?
		dec_ciphertextFIFO$D_OUT[23:0] :
		dec_xyReg_1[23:0]) ;
  assign IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d871 =
	     (IF_dec_round_1_5_EQ_0_6_THEN_dec_ciphertextFIF_ETC___d773 ^
	      IF_dec_round_1_5_EQ_0_6_THEN_dec_k0_9_ELSE_dec_ETC___d532) -
	     b__h78037 ;
  assign IF_dec_round_1_5_EQ_0_6_THEN_dec_k0_9_ELSE_dec_ETC___d532 =
	     (dec_round_1 == 24'd0) ? dec_k0 : dec_roundkey_1 ;
  assign NOT_dec_round_0_EQ_0_OR_dec_ciphertextFIFO_not_ETC___d34 =
	     (dec_round_0 != 24'd0 || dec_ciphertextFIFO$EMPTY_N) &&
	     (dec_round_0 == 24'd0 ||
	      2'd1 + ((dec_round_0 == dec_round_1) ? 2'd1 : 2'd0) == 2'd1) ;
  assign SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d176 =
	     (SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d69 ^
	      24'd21 - dec_round_0) -
	     b__h11765 ;
  assign SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d533 =
	     SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d528 ^
	     IF_dec_round_1_5_EQ_0_6_THEN_dec_k0_9_ELSE_dec_ETC___d532 ;
  assign SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d627 =
	     (SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d528 ^
	      24'd21 - dec_round_1) -
	     b__h56316 ;
  assign SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d82 =
	     SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d69 ^
	     IF_dec_round_0_EQ_0_THEN_dec_k0_9_ELSE_dec_rou_ETC___d81 ;
  assign _24_MINUS_dec_beta_2___d73 = 5'd24 - dec_beta ;
  assign _dfoo1 =
	     x__h3622 == 24'd25 &&
	     NOT_dec_round_0_EQ_0_OR_dec_ciphertextFIFO_not_ETC___d34 ||
	     x__h48970 == 24'd25 && dec_round_1 != 24'd0 &&
	     dec_round_1 != dec_round_0 ;
  assign _dfoo11 =
	     x__h3622 == 24'd20 &&
	     NOT_dec_round_0_EQ_0_OR_dec_ciphertextFIFO_not_ETC___d34 ||
	     x__h48970 == 24'd20 && dec_round_1 != 24'd0 &&
	     dec_round_1 != dec_round_0 ;
  assign _dfoo13 =
	     x__h3622 == 24'd19 &&
	     NOT_dec_round_0_EQ_0_OR_dec_ciphertextFIFO_not_ETC___d34 ||
	     x__h48970 == 24'd19 && dec_round_1 != 24'd0 &&
	     dec_round_1 != dec_round_0 ;
  assign _dfoo15 =
	     x__h3622 == 24'd18 &&
	     NOT_dec_round_0_EQ_0_OR_dec_ciphertextFIFO_not_ETC___d34 ||
	     x__h48970 == 24'd18 && dec_round_1 != 24'd0 &&
	     dec_round_1 != dec_round_0 ;
  assign _dfoo17 =
	     x__h3622 == 24'd17 &&
	     NOT_dec_round_0_EQ_0_OR_dec_ciphertextFIFO_not_ETC___d34 ||
	     x__h48970 == 24'd17 && dec_round_1 != 24'd0 &&
	     dec_round_1 != dec_round_0 ;
  assign _dfoo19 =
	     x__h3622 == 24'd16 &&
	     NOT_dec_round_0_EQ_0_OR_dec_ciphertextFIFO_not_ETC___d34 ||
	     x__h48970 == 24'd16 && dec_round_1 != 24'd0 &&
	     dec_round_1 != dec_round_0 ;
  assign _dfoo21 =
	     x__h3622 == 24'd15 &&
	     NOT_dec_round_0_EQ_0_OR_dec_ciphertextFIFO_not_ETC___d34 ||
	     x__h48970 == 24'd15 && dec_round_1 != 24'd0 &&
	     dec_round_1 != dec_round_0 ;
  assign _dfoo23 =
	     x__h3622 == 24'd14 &&
	     NOT_dec_round_0_EQ_0_OR_dec_ciphertextFIFO_not_ETC___d34 ||
	     x__h48970 == 24'd14 && dec_round_1 != 24'd0 &&
	     dec_round_1 != dec_round_0 ;
  assign _dfoo25 =
	     x__h3622 == 24'd13 &&
	     NOT_dec_round_0_EQ_0_OR_dec_ciphertextFIFO_not_ETC___d34 ||
	     x__h48970 == 24'd13 && dec_round_1 != 24'd0 &&
	     dec_round_1 != dec_round_0 ;
  assign _dfoo27 =
	     x__h3622 == 24'd12 &&
	     NOT_dec_round_0_EQ_0_OR_dec_ciphertextFIFO_not_ETC___d34 ||
	     x__h48970 == 24'd12 && dec_round_1 != 24'd0 &&
	     dec_round_1 != dec_round_0 ;
  assign _dfoo29 =
	     x__h3622 == 24'd11 &&
	     NOT_dec_round_0_EQ_0_OR_dec_ciphertextFIFO_not_ETC___d34 ||
	     x__h48970 == 24'd11 && dec_round_1 != 24'd0 &&
	     dec_round_1 != dec_round_0 ;
  assign _dfoo3 =
	     x__h3622 == 24'd24 &&
	     NOT_dec_round_0_EQ_0_OR_dec_ciphertextFIFO_not_ETC___d34 ||
	     x__h48970 == 24'd24 && dec_round_1 != 24'd0 &&
	     dec_round_1 != dec_round_0 ;
  assign _dfoo31 =
	     x__h3622 == 24'd10 &&
	     NOT_dec_round_0_EQ_0_OR_dec_ciphertextFIFO_not_ETC___d34 ||
	     x__h48970 == 24'd10 && dec_round_1 != 24'd0 &&
	     dec_round_1 != dec_round_0 ;
  assign _dfoo33 =
	     x__h3622 == 24'd9 &&
	     NOT_dec_round_0_EQ_0_OR_dec_ciphertextFIFO_not_ETC___d34 ||
	     x__h48970 == 24'd9 && dec_round_1 != 24'd0 &&
	     dec_round_1 != dec_round_0 ;
  assign _dfoo35 =
	     x__h3622 == 24'd8 &&
	     NOT_dec_round_0_EQ_0_OR_dec_ciphertextFIFO_not_ETC___d34 ||
	     x__h48970 == 24'd8 && dec_round_1 != 24'd0 &&
	     dec_round_1 != dec_round_0 ;
  assign _dfoo37 =
	     x__h3622 == 24'd7 &&
	     NOT_dec_round_0_EQ_0_OR_dec_ciphertextFIFO_not_ETC___d34 ||
	     x__h48970 == 24'd7 && dec_round_1 != 24'd0 &&
	     dec_round_1 != dec_round_0 ;
  assign _dfoo39 =
	     x__h3622 == 24'd6 &&
	     NOT_dec_round_0_EQ_0_OR_dec_ciphertextFIFO_not_ETC___d34 ||
	     x__h48970 == 24'd6 && dec_round_1 != 24'd0 &&
	     dec_round_1 != dec_round_0 ;
  assign _dfoo41 =
	     x__h3622 == 24'd5 &&
	     NOT_dec_round_0_EQ_0_OR_dec_ciphertextFIFO_not_ETC___d34 ||
	     x__h48970 == 24'd5 && dec_round_1 != 24'd0 &&
	     dec_round_1 != dec_round_0 ;
  assign _dfoo43 =
	     x__h3622 == 24'd4 &&
	     NOT_dec_round_0_EQ_0_OR_dec_ciphertextFIFO_not_ETC___d34 ||
	     x__h48970 == 24'd4 && dec_round_1 != 24'd0 &&
	     dec_round_1 != dec_round_0 ;
  assign _dfoo45 =
	     x__h3622 == 24'd3 &&
	     NOT_dec_round_0_EQ_0_OR_dec_ciphertextFIFO_not_ETC___d34 ||
	     x__h48970 == 24'd3 && dec_round_1 != 24'd0 &&
	     dec_round_1 != dec_round_0 ;
  assign _dfoo47 =
	     x__h3622 == 24'd2 &&
	     NOT_dec_round_0_EQ_0_OR_dec_ciphertextFIFO_not_ETC___d34 ||
	     x__h48970 == 24'd2 && dec_round_1 != 24'd0 &&
	     dec_round_1 != dec_round_0 ;
  assign _dfoo49 =
	     x__h3622 == 24'd1 &&
	     NOT_dec_round_0_EQ_0_OR_dec_ciphertextFIFO_not_ETC___d34 ||
	     x__h48970 == 24'd1 && dec_round_1 != 24'd0 &&
	     dec_round_1 != dec_round_0 ;
  assign _dfoo5 =
	     x__h3622 == 24'd23 &&
	     NOT_dec_round_0_EQ_0_OR_dec_ciphertextFIFO_not_ETC___d34 ||
	     x__h48970 == 24'd23 && dec_round_1 != 24'd0 &&
	     dec_round_1 != dec_round_0 ;
  assign _dfoo51 =
	     x__h3622 == 24'd0 &&
	     NOT_dec_round_0_EQ_0_OR_dec_ciphertextFIFO_not_ETC___d34 ||
	     x__h48970 == 24'd0 && dec_round_1 != 24'd0 &&
	     dec_round_1 != dec_round_0 ;
  assign _dfoo7 =
	     x__h3622 == 24'd22 &&
	     NOT_dec_round_0_EQ_0_OR_dec_ciphertextFIFO_not_ETC___d34 ||
	     x__h48970 == 24'd22 && dec_round_1 != 24'd0 &&
	     dec_round_1 != dec_round_0 ;
  assign _dfoo9 =
	     x__h3622 == 24'd21 &&
	     NOT_dec_round_0_EQ_0_OR_dec_ciphertextFIFO_not_ETC___d34 ||
	     x__h48970 == 24'd21 && dec_round_1 != 24'd0 &&
	     dec_round_1 != dec_round_0 ;
  assign b__h11765 =
	     _24_MINUS_dec_beta_2___d73[4] ?
	       IF_24_MINUS_dec_beta_2_3_BIT_3_5_THEN_IF_24_MI_ETC___d142 :
	       IF_24_MINUS_dec_beta_2_3_BIT_3_5_THEN_IF_24_MI_ETC___d174 ;
  assign b__h26569 =
	     dec_alpha[4] ?
	       IF_dec_alpha_6_BIT_3_8_THEN_IF_dec_alpha_6_BIT_ETC___d483 :
	       IF_dec_alpha_6_BIT_3_8_THEN_IF_dec_alpha_6_BIT_ETC___d515 ;
  assign b__h33609 =
	     _24_MINUS_dec_beta_2___d73[4] ?
	       IF_24_MINUS_dec_beta_2_3_BIT_3_5_THEN_IF_24_MI_ETC___d389 :
	       IF_24_MINUS_dec_beta_2_3_BIT_3_5_THEN_IF_24_MI_ETC___d421 ;
  assign b__h4695 =
	     dec_alpha[4] ?
	       IF_dec_alpha_6_BIT_3_8_THEN_IF_dec_alpha_6_BIT_ETC___d236 :
	       IF_dec_alpha_6_BIT_3_8_THEN_IF_dec_alpha_6_BIT_ETC___d268 ;
  assign b__h49273 =
	     dec_alpha[4] ?
	       IF_dec_alpha_6_BIT_3_8_THEN_IF_dec_alpha_6_BIT_ETC___d687 :
	       IF_dec_alpha_6_BIT_3_8_THEN_IF_dec_alpha_6_BIT_ETC___d719 ;
  assign b__h56316 =
	     _24_MINUS_dec_beta_2___d73[4] ?
	       IF_24_MINUS_dec_beta_2_3_BIT_3_5_THEN_IF_24_MI_ETC___d593 :
	       IF_24_MINUS_dec_beta_2_3_BIT_3_5_THEN_IF_24_MI_ETC___d625 ;
  assign b__h71075 =
	     dec_alpha[4] ?
	       IF_dec_alpha_6_BIT_3_8_THEN_IF_dec_alpha_6_BIT_ETC___d931 :
	       IF_dec_alpha_6_BIT_3_8_THEN_IF_dec_alpha_6_BIT_ETC___d963 ;
  assign b__h78037 =
	     _24_MINUS_dec_beta_2___d73[4] ?
	       IF_24_MINUS_dec_beta_2_3_BIT_3_5_THEN_IF_24_MI_ETC___d837 :
	       IF_24_MINUS_dec_beta_2_3_BIT_3_5_THEN_IF_24_MI_ETC___d869 ;
  assign x__h3622 = dec_round_0 + 24'd4 - 24'd1 ;
  assign x__h48970 = dec_round_1 + 24'd4 - 24'd1 ;
  always@(dec_round_0 or
	  dec_l_0 or
	  dec_l_1 or
	  dec_l_2 or
	  dec_l_3 or
	  dec_l_4 or
	  dec_l_5 or
	  dec_l_6 or
	  dec_l_7 or
	  dec_l_8 or
	  dec_l_9 or
	  dec_l_10 or
	  dec_l_11 or
	  dec_l_12 or
	  dec_l_13 or
	  dec_l_14 or
	  dec_l_15 or
	  dec_l_16 or
	  dec_l_17 or
	  dec_l_18 or
	  dec_l_19 or
	  dec_l_20 or
	  dec_l_21 or dec_l_22 or dec_l_23 or dec_l_24 or dec_l_25)
  begin
    case (dec_round_0)
      24'd0:
	  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d69 = dec_l_0;
      24'd1:
	  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d69 = dec_l_1;
      24'd2:
	  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d69 = dec_l_2;
      24'd3:
	  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d69 = dec_l_3;
      24'd4:
	  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d69 = dec_l_4;
      24'd5:
	  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d69 = dec_l_5;
      24'd6:
	  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d69 = dec_l_6;
      24'd7:
	  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d69 = dec_l_7;
      24'd8:
	  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d69 = dec_l_8;
      24'd9:
	  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d69 = dec_l_9;
      24'd10:
	  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d69 = dec_l_10;
      24'd11:
	  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d69 = dec_l_11;
      24'd12:
	  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d69 = dec_l_12;
      24'd13:
	  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d69 = dec_l_13;
      24'd14:
	  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d69 = dec_l_14;
      24'd15:
	  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d69 = dec_l_15;
      24'd16:
	  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d69 = dec_l_16;
      24'd17:
	  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d69 = dec_l_17;
      24'd18:
	  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d69 = dec_l_18;
      24'd19:
	  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d69 = dec_l_19;
      24'd20:
	  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d69 = dec_l_20;
      24'd21:
	  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d69 = dec_l_21;
      24'd22:
	  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d69 = dec_l_22;
      24'd23:
	  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d69 = dec_l_23;
      24'd24:
	  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d69 = dec_l_24;
      24'd25:
	  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d69 = dec_l_25;
      default: SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d69 =
		   24'b101010101010101010101010 /* unspecified value */ ;
    endcase
  end
  always@(dec_round_1 or
	  dec_l_0 or
	  dec_l_1 or
	  dec_l_2 or
	  dec_l_3 or
	  dec_l_4 or
	  dec_l_5 or
	  dec_l_6 or
	  dec_l_7 or
	  dec_l_8 or
	  dec_l_9 or
	  dec_l_10 or
	  dec_l_11 or
	  dec_l_12 or
	  dec_l_13 or
	  dec_l_14 or
	  dec_l_15 or
	  dec_l_16 or
	  dec_l_17 or
	  dec_l_18 or
	  dec_l_19 or
	  dec_l_20 or
	  dec_l_21 or dec_l_22 or dec_l_23 or dec_l_24 or dec_l_25)
  begin
    case (dec_round_1)
      24'd0:
	  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d528 = dec_l_0;
      24'd1:
	  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d528 = dec_l_1;
      24'd2:
	  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d528 = dec_l_2;
      24'd3:
	  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d528 = dec_l_3;
      24'd4:
	  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d528 = dec_l_4;
      24'd5:
	  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d528 = dec_l_5;
      24'd6:
	  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d528 = dec_l_6;
      24'd7:
	  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d528 = dec_l_7;
      24'd8:
	  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d528 = dec_l_8;
      24'd9:
	  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d528 = dec_l_9;
      24'd10:
	  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d528 =
	      dec_l_10;
      24'd11:
	  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d528 =
	      dec_l_11;
      24'd12:
	  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d528 =
	      dec_l_12;
      24'd13:
	  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d528 =
	      dec_l_13;
      24'd14:
	  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d528 =
	      dec_l_14;
      24'd15:
	  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d528 =
	      dec_l_15;
      24'd16:
	  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d528 =
	      dec_l_16;
      24'd17:
	  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d528 =
	      dec_l_17;
      24'd18:
	  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d528 =
	      dec_l_18;
      24'd19:
	  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d528 =
	      dec_l_19;
      24'd20:
	  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d528 =
	      dec_l_20;
      24'd21:
	  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d528 =
	      dec_l_21;
      24'd22:
	  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d528 =
	      dec_l_22;
      24'd23:
	  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d528 =
	      dec_l_23;
      24'd24:
	  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d528 =
	      dec_l_24;
      24'd25:
	  SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d528 =
	      dec_l_25;
      default: SEL_ARR_dec_l_0_2_dec_l_1_3_dec_l_2_4_dec_l_3__ETC___d528 =
		   24'b101010101010101010101010 /* unspecified value */ ;
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        dec_alpha <= `BSV_ASSIGNMENT_DELAY 5'd8;
	dec_beta <= `BSV_ASSIGNMENT_DELAY 5'd3;
	dec_k0 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	dec_l_0 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	dec_l_1 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	dec_l_10 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	dec_l_11 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	dec_l_12 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	dec_l_13 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	dec_l_14 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	dec_l_15 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	dec_l_16 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	dec_l_17 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	dec_l_18 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	dec_l_19 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	dec_l_2 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	dec_l_20 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	dec_l_21 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	dec_l_22 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	dec_l_23 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	dec_l_24 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	dec_l_25 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	dec_l_3 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	dec_l_4 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	dec_l_5 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	dec_l_6 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	dec_l_7 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	dec_l_8 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	dec_l_9 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	dec_round_0 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	dec_round_1 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	dec_roundkey_0 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	dec_roundkey_1 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	dec_xyReg_0 <= `BSV_ASSIGNMENT_DELAY 48'd0;
	dec_xyReg_1 <= `BSV_ASSIGNMENT_DELAY 48'd0;
      end
    else
      begin
        if (dec_alpha$EN) dec_alpha <= `BSV_ASSIGNMENT_DELAY dec_alpha$D_IN;
	if (dec_beta$EN) dec_beta <= `BSV_ASSIGNMENT_DELAY dec_beta$D_IN;
	if (dec_k0$EN) dec_k0 <= `BSV_ASSIGNMENT_DELAY dec_k0$D_IN;
	if (dec_l_0$EN) dec_l_0 <= `BSV_ASSIGNMENT_DELAY dec_l_0$D_IN;
	if (dec_l_1$EN) dec_l_1 <= `BSV_ASSIGNMENT_DELAY dec_l_1$D_IN;
	if (dec_l_10$EN) dec_l_10 <= `BSV_ASSIGNMENT_DELAY dec_l_10$D_IN;
	if (dec_l_11$EN) dec_l_11 <= `BSV_ASSIGNMENT_DELAY dec_l_11$D_IN;
	if (dec_l_12$EN) dec_l_12 <= `BSV_ASSIGNMENT_DELAY dec_l_12$D_IN;
	if (dec_l_13$EN) dec_l_13 <= `BSV_ASSIGNMENT_DELAY dec_l_13$D_IN;
	if (dec_l_14$EN) dec_l_14 <= `BSV_ASSIGNMENT_DELAY dec_l_14$D_IN;
	if (dec_l_15$EN) dec_l_15 <= `BSV_ASSIGNMENT_DELAY dec_l_15$D_IN;
	if (dec_l_16$EN) dec_l_16 <= `BSV_ASSIGNMENT_DELAY dec_l_16$D_IN;
	if (dec_l_17$EN) dec_l_17 <= `BSV_ASSIGNMENT_DELAY dec_l_17$D_IN;
	if (dec_l_18$EN) dec_l_18 <= `BSV_ASSIGNMENT_DELAY dec_l_18$D_IN;
	if (dec_l_19$EN) dec_l_19 <= `BSV_ASSIGNMENT_DELAY dec_l_19$D_IN;
	if (dec_l_2$EN) dec_l_2 <= `BSV_ASSIGNMENT_DELAY dec_l_2$D_IN;
	if (dec_l_20$EN) dec_l_20 <= `BSV_ASSIGNMENT_DELAY dec_l_20$D_IN;
	if (dec_l_21$EN) dec_l_21 <= `BSV_ASSIGNMENT_DELAY dec_l_21$D_IN;
	if (dec_l_22$EN) dec_l_22 <= `BSV_ASSIGNMENT_DELAY dec_l_22$D_IN;
	if (dec_l_23$EN) dec_l_23 <= `BSV_ASSIGNMENT_DELAY dec_l_23$D_IN;
	if (dec_l_24$EN) dec_l_24 <= `BSV_ASSIGNMENT_DELAY dec_l_24$D_IN;
	if (dec_l_25$EN) dec_l_25 <= `BSV_ASSIGNMENT_DELAY dec_l_25$D_IN;
	if (dec_l_3$EN) dec_l_3 <= `BSV_ASSIGNMENT_DELAY dec_l_3$D_IN;
	if (dec_l_4$EN) dec_l_4 <= `BSV_ASSIGNMENT_DELAY dec_l_4$D_IN;
	if (dec_l_5$EN) dec_l_5 <= `BSV_ASSIGNMENT_DELAY dec_l_5$D_IN;
	if (dec_l_6$EN) dec_l_6 <= `BSV_ASSIGNMENT_DELAY dec_l_6$D_IN;
	if (dec_l_7$EN) dec_l_7 <= `BSV_ASSIGNMENT_DELAY dec_l_7$D_IN;
	if (dec_l_8$EN) dec_l_8 <= `BSV_ASSIGNMENT_DELAY dec_l_8$D_IN;
	if (dec_l_9$EN) dec_l_9 <= `BSV_ASSIGNMENT_DELAY dec_l_9$D_IN;
	if (dec_round_0$EN)
	  dec_round_0 <= `BSV_ASSIGNMENT_DELAY dec_round_0$D_IN;
	if (dec_round_1$EN)
	  dec_round_1 <= `BSV_ASSIGNMENT_DELAY dec_round_1$D_IN;
	if (dec_roundkey_0$EN)
	  dec_roundkey_0 <= `BSV_ASSIGNMENT_DELAY dec_roundkey_0$D_IN;
	if (dec_roundkey_1$EN)
	  dec_roundkey_1 <= `BSV_ASSIGNMENT_DELAY dec_roundkey_1$D_IN;
	if (dec_xyReg_0$EN)
	  dec_xyReg_0 <= `BSV_ASSIGNMENT_DELAY dec_xyReg_0$D_IN;
	if (dec_xyReg_1$EN)
	  dec_xyReg_1 <= `BSV_ASSIGNMENT_DELAY dec_xyReg_1$D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    dec_alpha = 5'h0A;
    dec_beta = 5'h0A;
    dec_k0 = 24'hAAAAAA;
    dec_l_0 = 24'hAAAAAA;
    dec_l_1 = 24'hAAAAAA;
    dec_l_10 = 24'hAAAAAA;
    dec_l_11 = 24'hAAAAAA;
    dec_l_12 = 24'hAAAAAA;
    dec_l_13 = 24'hAAAAAA;
    dec_l_14 = 24'hAAAAAA;
    dec_l_15 = 24'hAAAAAA;
    dec_l_16 = 24'hAAAAAA;
    dec_l_17 = 24'hAAAAAA;
    dec_l_18 = 24'hAAAAAA;
    dec_l_19 = 24'hAAAAAA;
    dec_l_2 = 24'hAAAAAA;
    dec_l_20 = 24'hAAAAAA;
    dec_l_21 = 24'hAAAAAA;
    dec_l_22 = 24'hAAAAAA;
    dec_l_23 = 24'hAAAAAA;
    dec_l_24 = 24'hAAAAAA;
    dec_l_25 = 24'hAAAAAA;
    dec_l_3 = 24'hAAAAAA;
    dec_l_4 = 24'hAAAAAA;
    dec_l_5 = 24'hAAAAAA;
    dec_l_6 = 24'hAAAAAA;
    dec_l_7 = 24'hAAAAAA;
    dec_l_8 = 24'hAAAAAA;
    dec_l_9 = 24'hAAAAAA;
    dec_round_0 = 24'hAAAAAA;
    dec_round_1 = 24'hAAAAAA;
    dec_roundkey_0 = 24'hAAAAAA;
    dec_roundkey_1 = 24'hAAAAAA;
    dec_xyReg_0 = 48'hAAAAAAAAAAAA;
    dec_xyReg_1 = 48'hAAAAAAAAAAAA;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on
endmodule  // mkSynthesizedDecrypt

