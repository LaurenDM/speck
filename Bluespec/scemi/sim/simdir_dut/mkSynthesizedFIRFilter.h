/*
 * Generated by Bluespec Compiler, version 2014.07.A (build 34078, 2014-07-30)
 * 
 * On Wed Mar  2 23:25:02 EST 2016
 * 
 */

/* Generation options: keep-fires */
#ifndef __mkSynthesizedFIRFilter_h__
#define __mkSynthesizedFIRFilter_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"
#include "mkMultiplier.h"


/* Class declaration for the mkSynthesizedFIRFilter module */
class MOD_mkSynthesizedFIRFilter : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_Fifo<tUInt32> INST_fir_infifo;
  MOD_mkMultiplier INST_fir_m_0;
  MOD_mkMultiplier INST_fir_m_1;
  MOD_mkMultiplier INST_fir_m_2;
  MOD_mkMultiplier INST_fir_m_3;
  MOD_mkMultiplier INST_fir_m_4;
  MOD_mkMultiplier INST_fir_m_5;
  MOD_mkMultiplier INST_fir_m_6;
  MOD_mkMultiplier INST_fir_m_7;
  MOD_mkMultiplier INST_fir_m_8;
  MOD_Fifo<tUInt32> INST_fir_outfifo;
  MOD_Reg<tUInt32> INST_fir_r_0;
  MOD_Reg<tUInt32> INST_fir_r_1;
  MOD_Reg<tUInt32> INST_fir_r_2;
  MOD_Reg<tUInt32> INST_fir_r_3;
  MOD_Reg<tUInt32> INST_fir_r_4;
  MOD_Reg<tUInt32> INST_fir_r_5;
  MOD_Reg<tUInt32> INST_fir_r_6;
  MOD_Reg<tUInt32> INST_fir_r_7;
 
 /* Constructor */
 public:
  MOD_mkSynthesizedFIRFilter(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
  tUInt8 PORT_EN_setfactor_put;
  tUInt8 PORT_EN_putSampleInput;
  tUInt8 PORT_EN_getSampleOutput;
  tUInt32 PORT_setfactor_put;
  tUInt32 PORT_putSampleInput_in;
  tUInt8 PORT_RDY_setfactor_put;
  tUInt8 PORT_RDY_putSampleInput;
  tUInt32 PORT_getSampleOutput;
  tUInt8 PORT_RDY_getSampleOutput;
 
 /* Publicly accessible definitions */
 public:
  tUInt8 DEF_WILL_FIRE_setfactor_put;
  tUInt8 DEF_CAN_FIRE_setfactor_put;
  tUInt8 DEF_WILL_FIRE_getSampleOutput;
  tUInt8 DEF_WILL_FIRE_putSampleInput;
  tUInt8 DEF_WILL_FIRE_RL_fir_getSum;
  tUInt8 DEF_CAN_FIRE_RL_fir_getSum;
  tUInt8 DEF_WILL_FIRE_RL_fir_process;
  tUInt8 DEF_CAN_FIRE_RL_fir_process;
  tUInt8 DEF_CAN_FIRE_getSampleOutput;
  tUInt8 DEF_CAN_FIRE_putSampleInput;
 
 /* Local definitions */
 private:
 
 /* Rules */
 public:
  void RL_fir_process();
  void RL_fir_getSum();
 
 /* Methods */
 public:
  void METH_putSampleInput(tUInt32 ARG_putSampleInput_in);
  tUInt8 METH_RDY_putSampleInput();
  tUInt32 METH_getSampleOutput();
  tUInt8 METH_RDY_getSampleOutput();
  void METH_setfactor_put(tUInt32 ARG_setfactor_put);
  tUInt8 METH_RDY_setfactor_put();
 
 /* Reset routines */
 public:
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkSynthesizedFIRFilter &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mkSynthesizedFIRFilter &backing);
  void vcd_prims(tVCDDumpType dt, MOD_mkSynthesizedFIRFilter &backing);
  void vcd_submodules(tVCDDumpType dt, unsigned int levels, MOD_mkSynthesizedFIRFilter &backing);
};

#endif /* ifndef __mkSynthesizedFIRFilter_h__ */
