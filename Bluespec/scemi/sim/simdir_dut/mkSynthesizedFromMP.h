/*
 * Generated by Bluespec Compiler, version 2014.07.A (build 34078, 2014-07-30)
 * 
 * On Wed Mar  2 23:25:02 EST 2016
 * 
 */

/* Generation options: keep-fires */
#ifndef __mkSynthesizedFromMP_h__
#define __mkSynthesizedFromMP_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"


/* Class declaration for the mkSynthesizedFromMP module */
class MOD_mkSynthesizedFromMP : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_Reg<tUInt8> INST_from_mp_continueConvert;
  MOD_Reg<tUInt8> INST_from_mp_cordicFromMP_0_idle;
  MOD_Reg<tUInt32> INST_from_mp_cordicFromMP_0_img;
  MOD_Fifo<tUInt64> INST_from_mp_cordicFromMP_0_infifo;
  MOD_Reg<tUInt8> INST_from_mp_cordicFromMP_0_iter;
  MOD_Fifo<tUInt64> INST_from_mp_cordicFromMP_0_outfifo;
  MOD_Reg<tUInt32> INST_from_mp_cordicFromMP_0_phase;
  MOD_Reg<tUInt32> INST_from_mp_cordicFromMP_0_rel;
  MOD_Reg<tUInt8> INST_from_mp_cordicFromMP_1_idle;
  MOD_Reg<tUInt32> INST_from_mp_cordicFromMP_1_img;
  MOD_Fifo<tUInt64> INST_from_mp_cordicFromMP_1_infifo;
  MOD_Reg<tUInt8> INST_from_mp_cordicFromMP_1_iter;
  MOD_Fifo<tUInt64> INST_from_mp_cordicFromMP_1_outfifo;
  MOD_Reg<tUInt32> INST_from_mp_cordicFromMP_1_phase;
  MOD_Reg<tUInt32> INST_from_mp_cordicFromMP_1_rel;
  MOD_Reg<tUInt8> INST_from_mp_cordicFromMP_2_idle;
  MOD_Reg<tUInt32> INST_from_mp_cordicFromMP_2_img;
  MOD_Fifo<tUInt64> INST_from_mp_cordicFromMP_2_infifo;
  MOD_Reg<tUInt8> INST_from_mp_cordicFromMP_2_iter;
  MOD_Fifo<tUInt64> INST_from_mp_cordicFromMP_2_outfifo;
  MOD_Reg<tUInt32> INST_from_mp_cordicFromMP_2_phase;
  MOD_Reg<tUInt32> INST_from_mp_cordicFromMP_2_rel;
  MOD_Reg<tUInt8> INST_from_mp_cordicFromMP_3_idle;
  MOD_Reg<tUInt32> INST_from_mp_cordicFromMP_3_img;
  MOD_Fifo<tUInt64> INST_from_mp_cordicFromMP_3_infifo;
  MOD_Reg<tUInt8> INST_from_mp_cordicFromMP_3_iter;
  MOD_Fifo<tUInt64> INST_from_mp_cordicFromMP_3_outfifo;
  MOD_Reg<tUInt32> INST_from_mp_cordicFromMP_3_phase;
  MOD_Reg<tUInt32> INST_from_mp_cordicFromMP_3_rel;
  MOD_Reg<tUInt8> INST_from_mp_cordicFromMP_4_idle;
  MOD_Reg<tUInt32> INST_from_mp_cordicFromMP_4_img;
  MOD_Fifo<tUInt64> INST_from_mp_cordicFromMP_4_infifo;
  MOD_Reg<tUInt8> INST_from_mp_cordicFromMP_4_iter;
  MOD_Fifo<tUInt64> INST_from_mp_cordicFromMP_4_outfifo;
  MOD_Reg<tUInt32> INST_from_mp_cordicFromMP_4_phase;
  MOD_Reg<tUInt32> INST_from_mp_cordicFromMP_4_rel;
  MOD_Reg<tUInt8> INST_from_mp_cordicFromMP_5_idle;
  MOD_Reg<tUInt32> INST_from_mp_cordicFromMP_5_img;
  MOD_Fifo<tUInt64> INST_from_mp_cordicFromMP_5_infifo;
  MOD_Reg<tUInt8> INST_from_mp_cordicFromMP_5_iter;
  MOD_Fifo<tUInt64> INST_from_mp_cordicFromMP_5_outfifo;
  MOD_Reg<tUInt32> INST_from_mp_cordicFromMP_5_phase;
  MOD_Reg<tUInt32> INST_from_mp_cordicFromMP_5_rel;
  MOD_Reg<tUInt8> INST_from_mp_cordicFromMP_6_idle;
  MOD_Reg<tUInt32> INST_from_mp_cordicFromMP_6_img;
  MOD_Fifo<tUInt64> INST_from_mp_cordicFromMP_6_infifo;
  MOD_Reg<tUInt8> INST_from_mp_cordicFromMP_6_iter;
  MOD_Fifo<tUInt64> INST_from_mp_cordicFromMP_6_outfifo;
  MOD_Reg<tUInt32> INST_from_mp_cordicFromMP_6_phase;
  MOD_Reg<tUInt32> INST_from_mp_cordicFromMP_6_rel;
  MOD_Reg<tUInt8> INST_from_mp_cordicFromMP_7_idle;
  MOD_Reg<tUInt32> INST_from_mp_cordicFromMP_7_img;
  MOD_Fifo<tUInt64> INST_from_mp_cordicFromMP_7_infifo;
  MOD_Reg<tUInt8> INST_from_mp_cordicFromMP_7_iter;
  MOD_Fifo<tUInt64> INST_from_mp_cordicFromMP_7_outfifo;
  MOD_Reg<tUInt32> INST_from_mp_cordicFromMP_7_phase;
  MOD_Reg<tUInt32> INST_from_mp_cordicFromMP_7_rel;
  MOD_Reg<tUInt8> INST_from_mp_counter;
  MOD_Reg<tUInt8> INST_from_mp_full;
  MOD_Reg<tUWide> INST_from_mp_in;
  MOD_Fifo<tUWide> INST_from_mp_inputFIFO;
  MOD_Reg<tUWide> INST_from_mp_out;
  MOD_Fifo<tUWide> INST_from_mp_outputFIFO;
  MOD_Reg<tUInt8> INST_from_mp_startLoad;
 
 /* Constructor */
 public:
  MOD_mkSynthesizedFromMP(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
  tUInt8 PORT_EN_request_put;
  tUInt8 PORT_EN_response_get;
  tUWide PORT_request_put;
  tUInt8 PORT_RDY_request_put;
  tUWide PORT_response_get;
  tUInt8 PORT_RDY_response_get;
 
 /* Publicly accessible definitions */
 public:
  tUInt8 DEF_WILL_FIRE_response_get;
  tUInt8 DEF_WILL_FIRE_request_put;
  tUInt8 DEF_CAN_FIRE_response_get;
  tUInt8 DEF_CAN_FIRE_request_put;
  tUInt8 DEF_WILL_FIRE_RL_from_mp_finish;
  tUInt8 DEF_CAN_FIRE_RL_from_mp_finish;
  tUInt8 DEF_WILL_FIRE_RL_from_mp_conversion;
  tUInt8 DEF_CAN_FIRE_RL_from_mp_conversion;
  tUInt8 DEF_WILL_FIRE_RL_from_mp_loadInitialData;
  tUInt8 DEF_CAN_FIRE_RL_from_mp_loadInitialData;
  tUInt8 DEF_WILL_FIRE_RL_from_mp_cordicFromMP_7_iterate;
  tUInt8 DEF_CAN_FIRE_RL_from_mp_cordicFromMP_7_iterate;
  tUInt8 DEF_WILL_FIRE_RL_from_mp_cordicFromMP_7_start;
  tUInt8 DEF_CAN_FIRE_RL_from_mp_cordicFromMP_7_start;
  tUInt8 DEF_WILL_FIRE_RL_from_mp_cordicFromMP_6_iterate;
  tUInt8 DEF_CAN_FIRE_RL_from_mp_cordicFromMP_6_iterate;
  tUInt8 DEF_WILL_FIRE_RL_from_mp_cordicFromMP_6_start;
  tUInt8 DEF_CAN_FIRE_RL_from_mp_cordicFromMP_6_start;
  tUInt8 DEF_WILL_FIRE_RL_from_mp_cordicFromMP_5_iterate;
  tUInt8 DEF_CAN_FIRE_RL_from_mp_cordicFromMP_5_iterate;
  tUInt8 DEF_WILL_FIRE_RL_from_mp_cordicFromMP_5_start;
  tUInt8 DEF_CAN_FIRE_RL_from_mp_cordicFromMP_5_start;
  tUInt8 DEF_WILL_FIRE_RL_from_mp_cordicFromMP_4_iterate;
  tUInt8 DEF_CAN_FIRE_RL_from_mp_cordicFromMP_4_iterate;
  tUInt8 DEF_WILL_FIRE_RL_from_mp_cordicFromMP_4_start;
  tUInt8 DEF_CAN_FIRE_RL_from_mp_cordicFromMP_4_start;
  tUInt8 DEF_WILL_FIRE_RL_from_mp_cordicFromMP_3_iterate;
  tUInt8 DEF_CAN_FIRE_RL_from_mp_cordicFromMP_3_iterate;
  tUInt8 DEF_WILL_FIRE_RL_from_mp_cordicFromMP_3_start;
  tUInt8 DEF_CAN_FIRE_RL_from_mp_cordicFromMP_3_start;
  tUInt8 DEF_WILL_FIRE_RL_from_mp_cordicFromMP_2_iterate;
  tUInt8 DEF_CAN_FIRE_RL_from_mp_cordicFromMP_2_iterate;
  tUInt8 DEF_WILL_FIRE_RL_from_mp_cordicFromMP_2_start;
  tUInt8 DEF_CAN_FIRE_RL_from_mp_cordicFromMP_2_start;
  tUInt8 DEF_WILL_FIRE_RL_from_mp_cordicFromMP_1_iterate;
  tUInt8 DEF_CAN_FIRE_RL_from_mp_cordicFromMP_1_iterate;
  tUInt8 DEF_WILL_FIRE_RL_from_mp_cordicFromMP_1_start;
  tUInt8 DEF_CAN_FIRE_RL_from_mp_cordicFromMP_1_start;
  tUInt8 DEF_WILL_FIRE_RL_from_mp_cordicFromMP_0_iterate;
  tUInt8 DEF_CAN_FIRE_RL_from_mp_cordicFromMP_0_iterate;
  tUInt8 DEF_WILL_FIRE_RL_from_mp_cordicFromMP_0_start;
  tUInt8 DEF_CAN_FIRE_RL_from_mp_cordicFromMP_0_start;
  tUInt8 DEF_x__h48470;
  tUInt8 DEF_x__h44220;
  tUInt8 DEF_x__h38760;
  tUInt8 DEF_x__h33300;
  tUInt8 DEF_x__h27840;
  tUInt8 DEF_x__h22380;
  tUInt8 DEF_x__h16920;
  tUInt8 DEF_x__h11460;
  tUInt8 DEF_x__h6000;
  tUInt8 DEF_from_mp_cordicFromMP_7_iter_17_EQ_15___d618;
  tUInt8 DEF_from_mp_cordicFromMP_6_iter_37_EQ_15___d538;
  tUInt8 DEF_from_mp_cordicFromMP_5_iter_57_EQ_15___d458;
  tUInt8 DEF_from_mp_cordicFromMP_4_iter_77_EQ_15___d378;
  tUInt8 DEF_from_mp_cordicFromMP_3_iter_97_EQ_15___d298;
  tUInt8 DEF_from_mp_cordicFromMP_2_iter_17_EQ_15___d218;
  tUInt8 DEF_from_mp_cordicFromMP_1_iter_37_EQ_15___d138;
  tUInt8 DEF_from_mp_cordicFromMP_0_iter_6_EQ_15___d57;
  tUInt8 DEF_NOT_from_mp_cordicFromMP_7_iter_17_EQ_15_18___d619;
  tUInt8 DEF_NOT_from_mp_cordicFromMP_6_iter_37_EQ_15_38___d539;
  tUInt8 DEF_NOT_from_mp_cordicFromMP_5_iter_57_EQ_15_58___d459;
  tUInt8 DEF_NOT_from_mp_cordicFromMP_4_iter_77_EQ_15_78___d379;
  tUInt8 DEF_NOT_from_mp_cordicFromMP_3_iter_97_EQ_15_98___d299;
  tUInt8 DEF_NOT_from_mp_cordicFromMP_2_iter_17_EQ_15_18___d219;
  tUInt8 DEF_NOT_from_mp_cordicFromMP_1_iter_37_EQ_15_38___d139;
  tUInt8 DEF_NOT_from_mp_cordicFromMP_0_iter_6_EQ_15_7___d58;
 
 /* Local definitions */
 private:
  tUWide DEF_from_mp_out__h49760;
  tUWide DEF_from_mp_in__h47449;
  tUWide DEF_from_mp_inputFIFO_first____d661;
  tUWide DEF_IF_from_mp_counter_71_EQ_7_90_THEN_SEL_ARR_fro_ETC___d760;
  tUWide DEF_IF_from_mp_counter_71_EQ_7_90_THEN_SEL_ARR_fro_ETC___d755;
  tUWide DEF_IF_from_mp_counter_71_EQ_7_90_THEN_SEL_ARR_fro_ETC___d750;
  tUWide DEF_IF_from_mp_counter_71_EQ_7_90_THEN_SEL_ARR_fro_ETC___d745;
  tUWide DEF_response_get__avValue1;
 
 /* Rules */
 public:
  void RL_from_mp_cordicFromMP_0_start();
  void RL_from_mp_cordicFromMP_0_iterate();
  void RL_from_mp_cordicFromMP_1_start();
  void RL_from_mp_cordicFromMP_1_iterate();
  void RL_from_mp_cordicFromMP_2_start();
  void RL_from_mp_cordicFromMP_2_iterate();
  void RL_from_mp_cordicFromMP_3_start();
  void RL_from_mp_cordicFromMP_3_iterate();
  void RL_from_mp_cordicFromMP_4_start();
  void RL_from_mp_cordicFromMP_4_iterate();
  void RL_from_mp_cordicFromMP_5_start();
  void RL_from_mp_cordicFromMP_5_iterate();
  void RL_from_mp_cordicFromMP_6_start();
  void RL_from_mp_cordicFromMP_6_iterate();
  void RL_from_mp_cordicFromMP_7_start();
  void RL_from_mp_cordicFromMP_7_iterate();
  void RL_from_mp_loadInitialData();
  void RL_from_mp_conversion();
  void RL_from_mp_finish();
 
 /* Methods */
 public:
  void METH_request_put(tUWide ARG_request_put);
  tUInt8 METH_RDY_request_put();
  tUWide METH_response_get();
  tUInt8 METH_RDY_response_get();
 
 /* Reset routines */
 public:
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkSynthesizedFromMP &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mkSynthesizedFromMP &backing);
  void vcd_prims(tVCDDumpType dt, MOD_mkSynthesizedFromMP &backing);
};

#endif /* ifndef __mkSynthesizedFromMP_h__ */
