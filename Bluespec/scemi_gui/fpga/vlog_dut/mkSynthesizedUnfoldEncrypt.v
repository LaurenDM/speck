//
// Generated by Bluespec Compiler, version 2014.07.A (build 34078, 2014-07-30)
//
// On Wed May  4 17:24:25 EDT 2016
//
//
// Ports:
// Name                         I/O  size props
// RDY_setKey                     O     1
// RDY_inputMessage               O     1 reg
// getResult                      O    48 reg
// RDY_getResult                  O     1 reg
// CLK                            I     1 clock
// RST_N                          I     1 reset
// setKey_key                     I    96
// inputMessage_text              I    48 reg
// EN_setKey                      I     1
// EN_inputMessage                I     1
// EN_getResult                   I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkSynthesizedUnfoldEncrypt(CLK,
				  RST_N,

				  setKey_key,
				  EN_setKey,
				  RDY_setKey,

				  inputMessage_text,
				  EN_inputMessage,
				  RDY_inputMessage,

				  EN_getResult,
				  getResult,
				  RDY_getResult);
  input  CLK;
  input  RST_N;

  // action method setKey
  input  [95 : 0] setKey_key;
  input  EN_setKey;
  output RDY_setKey;

  // action method inputMessage
  input  [47 : 0] inputMessage_text;
  input  EN_inputMessage;
  output RDY_inputMessage;

  // actionvalue method getResult
  input  EN_getResult;
  output [47 : 0] getResult;
  output RDY_getResult;

  // signals for module outputs
  wire [47 : 0] getResult;
  wire RDY_getResult, RDY_inputMessage, RDY_setKey;

  // register enc_alpha
  reg [4 : 0] enc_alpha;
  wire [4 : 0] enc_alpha$D_IN;
  wire enc_alpha$EN;

  // register enc_beta
  reg [4 : 0] enc_beta;
  wire [4 : 0] enc_beta$D_IN;
  wire enc_beta$EN;

  // register enc_k0
  reg [23 : 0] enc_k0;
  wire [23 : 0] enc_k0$D_IN;
  wire enc_k0$EN;

  // register enc_l_0
  reg [23 : 0] enc_l_0;
  wire [23 : 0] enc_l_0$D_IN;
  wire enc_l_0$EN;

  // register enc_l_1
  reg [23 : 0] enc_l_1;
  wire [23 : 0] enc_l_1$D_IN;
  wire enc_l_1$EN;

  // register enc_l_10
  reg [23 : 0] enc_l_10;
  wire [23 : 0] enc_l_10$D_IN;
  wire enc_l_10$EN;

  // register enc_l_11
  reg [23 : 0] enc_l_11;
  wire [23 : 0] enc_l_11$D_IN;
  wire enc_l_11$EN;

  // register enc_l_12
  reg [23 : 0] enc_l_12;
  wire [23 : 0] enc_l_12$D_IN;
  wire enc_l_12$EN;

  // register enc_l_13
  reg [23 : 0] enc_l_13;
  wire [23 : 0] enc_l_13$D_IN;
  wire enc_l_13$EN;

  // register enc_l_14
  reg [23 : 0] enc_l_14;
  wire [23 : 0] enc_l_14$D_IN;
  wire enc_l_14$EN;

  // register enc_l_15
  reg [23 : 0] enc_l_15;
  wire [23 : 0] enc_l_15$D_IN;
  wire enc_l_15$EN;

  // register enc_l_16
  reg [23 : 0] enc_l_16;
  wire [23 : 0] enc_l_16$D_IN;
  wire enc_l_16$EN;

  // register enc_l_17
  reg [23 : 0] enc_l_17;
  wire [23 : 0] enc_l_17$D_IN;
  wire enc_l_17$EN;

  // register enc_l_18
  reg [23 : 0] enc_l_18;
  wire [23 : 0] enc_l_18$D_IN;
  wire enc_l_18$EN;

  // register enc_l_19
  reg [23 : 0] enc_l_19;
  wire [23 : 0] enc_l_19$D_IN;
  wire enc_l_19$EN;

  // register enc_l_2
  reg [23 : 0] enc_l_2;
  wire [23 : 0] enc_l_2$D_IN;
  wire enc_l_2$EN;

  // register enc_l_20
  reg [23 : 0] enc_l_20;
  wire [23 : 0] enc_l_20$D_IN;
  wire enc_l_20$EN;

  // register enc_l_21
  reg [23 : 0] enc_l_21;
  wire [23 : 0] enc_l_21$D_IN;
  wire enc_l_21$EN;

  // register enc_l_22
  reg [23 : 0] enc_l_22;
  wire [23 : 0] enc_l_22$D_IN;
  wire enc_l_22$EN;

  // register enc_l_23
  reg [23 : 0] enc_l_23;
  wire [23 : 0] enc_l_23$D_IN;
  wire enc_l_23$EN;

  // register enc_l_24
  reg [23 : 0] enc_l_24;
  wire [23 : 0] enc_l_24$D_IN;
  wire enc_l_24$EN;

  // register enc_l_25
  reg [23 : 0] enc_l_25;
  wire [23 : 0] enc_l_25$D_IN;
  wire enc_l_25$EN;

  // register enc_l_3
  reg [23 : 0] enc_l_3;
  wire [23 : 0] enc_l_3$D_IN;
  wire enc_l_3$EN;

  // register enc_l_4
  reg [23 : 0] enc_l_4;
  wire [23 : 0] enc_l_4$D_IN;
  wire enc_l_4$EN;

  // register enc_l_5
  reg [23 : 0] enc_l_5;
  wire [23 : 0] enc_l_5$D_IN;
  wire enc_l_5$EN;

  // register enc_l_6
  reg [23 : 0] enc_l_6;
  wire [23 : 0] enc_l_6$D_IN;
  wire enc_l_6$EN;

  // register enc_l_7
  reg [23 : 0] enc_l_7;
  wire [23 : 0] enc_l_7$D_IN;
  wire enc_l_7$EN;

  // register enc_l_8
  reg [23 : 0] enc_l_8;
  wire [23 : 0] enc_l_8$D_IN;
  wire enc_l_8$EN;

  // register enc_l_9
  reg [23 : 0] enc_l_9;
  wire [23 : 0] enc_l_9$D_IN;
  wire enc_l_9$EN;

  // register enc_round_0
  reg [23 : 0] enc_round_0;
  wire [23 : 0] enc_round_0$D_IN;
  wire enc_round_0$EN;

  // register enc_round_1
  reg [23 : 0] enc_round_1;
  wire [23 : 0] enc_round_1$D_IN;
  wire enc_round_1$EN;

  // register enc_roundkey_0
  reg [23 : 0] enc_roundkey_0;
  wire [23 : 0] enc_roundkey_0$D_IN;
  wire enc_roundkey_0$EN;

  // register enc_roundkey_1
  reg [23 : 0] enc_roundkey_1;
  wire [23 : 0] enc_roundkey_1$D_IN;
  wire enc_roundkey_1$EN;

  // register enc_xyReg_0
  reg [47 : 0] enc_xyReg_0;
  wire [47 : 0] enc_xyReg_0$D_IN;
  wire enc_xyReg_0$EN;

  // register enc_xyReg_1
  reg [47 : 0] enc_xyReg_1;
  wire [47 : 0] enc_xyReg_1$D_IN;
  wire enc_xyReg_1$EN;

  // ports of submodule enc_ciphertextFIFO
  wire [47 : 0] enc_ciphertextFIFO$D_IN, enc_ciphertextFIFO$D_OUT;
  wire enc_ciphertextFIFO$CLR,
       enc_ciphertextFIFO$DEQ,
       enc_ciphertextFIFO$EMPTY_N,
       enc_ciphertextFIFO$ENQ,
       enc_ciphertextFIFO$FULL_N;

  // ports of submodule enc_plaintextFIFO
  wire [47 : 0] enc_plaintextFIFO$D_IN, enc_plaintextFIFO$D_OUT;
  wire enc_plaintextFIFO$CLR,
       enc_plaintextFIFO$DEQ,
       enc_plaintextFIFO$EMPTY_N,
       enc_plaintextFIFO$ENQ,
       enc_plaintextFIFO$FULL_N;

  // rule scheduling signals
  wire CAN_FIRE_RL_enc_pipeline,
       CAN_FIRE_getResult,
       CAN_FIRE_inputMessage,
       CAN_FIRE_setKey,
       WILL_FIRE_RL_enc_pipeline,
       WILL_FIRE_getResult,
       WILL_FIRE_inputMessage,
       WILL_FIRE_setKey;

  // inputs to muxes for submodule ports
  wire [23 : 0] MUX_enc_l_0$write_1__VAL_1,
		MUX_enc_l_1$write_1__VAL_1,
		MUX_enc_l_2$write_1__VAL_1;
  wire MUX_enc_l_0$write_1__SEL_1,
       MUX_enc_l_1$write_1__SEL_1,
       MUX_enc_l_2$write_1__SEL_1;

  // remaining internal signals
  reg [23 : 0] SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527,
	       SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70;
  wire [23 : 0] IF_24_MINUS_enc_alpha_6_7_BIT_2_0_THEN_IF_24_M_ETC___d251,
		IF_24_MINUS_enc_alpha_6_7_BIT_2_0_THEN_IF_24_M_ETC___d555,
		IF_24_MINUS_enc_alpha_6_7_BIT_2_0_THEN_IF_24_M_ETC___d799,
		IF_24_MINUS_enc_alpha_6_7_BIT_2_0_THEN_IF_24_M_ETC___d98,
		IF_24_MINUS_enc_alpha_6_7_BIT_3_9_THEN_IF_24_M_ETC___d130,
		IF_24_MINUS_enc_alpha_6_7_BIT_3_9_THEN_IF_24_M_ETC___d162,
		IF_24_MINUS_enc_alpha_6_7_BIT_3_9_THEN_IF_24_M_ETC___d283,
		IF_24_MINUS_enc_alpha_6_7_BIT_3_9_THEN_IF_24_M_ETC___d315,
		IF_24_MINUS_enc_alpha_6_7_BIT_3_9_THEN_IF_24_M_ETC___d587,
		IF_24_MINUS_enc_alpha_6_7_BIT_3_9_THEN_IF_24_M_ETC___d619,
		IF_24_MINUS_enc_alpha_6_7_BIT_3_9_THEN_IF_24_M_ETC___d831,
		IF_24_MINUS_enc_alpha_6_7_BIT_3_9_THEN_IF_24_M_ETC___d863,
		IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d168,
		IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d321,
		IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d624,
		IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d868,
		IF_enc_beta_22_BIT_2_25_THEN_IF_enc_beta_22_BI_ETC___d355,
		IF_enc_beta_22_BIT_2_25_THEN_IF_enc_beta_22_BI_ETC___d451,
		IF_enc_beta_22_BIT_2_25_THEN_IF_enc_beta_22_BI_ETC___d702,
		IF_enc_beta_22_BIT_2_25_THEN_IF_enc_beta_22_BI_ETC___d896,
		IF_enc_beta_22_BIT_3_24_THEN_IF_enc_beta_22_BI_ETC___d387,
		IF_enc_beta_22_BIT_3_24_THEN_IF_enc_beta_22_BI_ETC___d419,
		IF_enc_beta_22_BIT_3_24_THEN_IF_enc_beta_22_BI_ETC___d483,
		IF_enc_beta_22_BIT_3_24_THEN_IF_enc_beta_22_BI_ETC___d515,
		IF_enc_beta_22_BIT_3_24_THEN_IF_enc_beta_22_BI_ETC___d734,
		IF_enc_beta_22_BIT_3_24_THEN_IF_enc_beta_22_BI_ETC___d766,
		IF_enc_beta_22_BIT_3_24_THEN_IF_enc_beta_22_BI_ETC___d928,
		IF_enc_beta_22_BIT_3_24_THEN_IF_enc_beta_22_BI_ETC___d960,
		IF_enc_round_0_EQ_0_THEN_enc_k0_64_ELSE_enc_ro_ETC___d166,
		IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d223,
		IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d319,
		IF_enc_round_1_5_EQ_0_6_THEN_enc_k0_64_ELSE_en_ETC___d622,
		IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d771,
		IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d866,
		b__h15790,
		b__h26646,
		b__h37455,
		b__h4694,
		b__h49240,
		b__h60165,
		b__h71014,
		b__h81790,
		x__h3622,
		x__h48938;
  wire [4 : 0] _24_MINUS_enc_alpha_6___d37;
  wire NOT_enc_round_0_EQ_0_OR_enc_plaintextFIFO_notE_ETC___d34,
       _dfoo1,
       _dfoo11,
       _dfoo13,
       _dfoo15,
       _dfoo17,
       _dfoo19,
       _dfoo21,
       _dfoo23,
       _dfoo25,
       _dfoo27,
       _dfoo29,
       _dfoo3,
       _dfoo31,
       _dfoo33,
       _dfoo35,
       _dfoo37,
       _dfoo39,
       _dfoo41,
       _dfoo43,
       _dfoo45,
       _dfoo47,
       _dfoo49,
       _dfoo5,
       _dfoo51,
       _dfoo7,
       _dfoo9;

  // action method setKey
  assign RDY_setKey =
	     !enc_plaintextFIFO$EMPTY_N && enc_round_0 == 24'd0 &&
	     enc_round_1 == 24'd0 ;
  assign CAN_FIRE_setKey =
	     !enc_plaintextFIFO$EMPTY_N && enc_round_0 == 24'd0 &&
	     enc_round_1 == 24'd0 ;
  assign WILL_FIRE_setKey = EN_setKey ;

  // action method inputMessage
  assign RDY_inputMessage = enc_plaintextFIFO$FULL_N ;
  assign CAN_FIRE_inputMessage = enc_plaintextFIFO$FULL_N ;
  assign WILL_FIRE_inputMessage = EN_inputMessage ;

  // actionvalue method getResult
  assign getResult = enc_ciphertextFIFO$D_OUT ;
  assign RDY_getResult = enc_ciphertextFIFO$EMPTY_N ;
  assign CAN_FIRE_getResult = enc_ciphertextFIFO$EMPTY_N ;
  assign WILL_FIRE_getResult = EN_getResult ;

  // submodule enc_ciphertextFIFO
  FIFO2 #(.width(32'd48), .guarded(32'd1)) enc_ciphertextFIFO(.RST(RST_N),
							      .CLK(CLK),
							      .D_IN(enc_ciphertextFIFO$D_IN),
							      .ENQ(enc_ciphertextFIFO$ENQ),
							      .DEQ(enc_ciphertextFIFO$DEQ),
							      .CLR(enc_ciphertextFIFO$CLR),
							      .D_OUT(enc_ciphertextFIFO$D_OUT),
							      .FULL_N(enc_ciphertextFIFO$FULL_N),
							      .EMPTY_N(enc_ciphertextFIFO$EMPTY_N));

  // submodule enc_plaintextFIFO
  FIFO2 #(.width(32'd48), .guarded(32'd1)) enc_plaintextFIFO(.RST(RST_N),
							     .CLK(CLK),
							     .D_IN(enc_plaintextFIFO$D_IN),
							     .ENQ(enc_plaintextFIFO$ENQ),
							     .DEQ(enc_plaintextFIFO$DEQ),
							     .CLR(enc_plaintextFIFO$CLR),
							     .D_OUT(enc_plaintextFIFO$D_OUT),
							     .FULL_N(enc_plaintextFIFO$FULL_N),
							     .EMPTY_N(enc_plaintextFIFO$EMPTY_N));

  // rule RL_enc_pipeline
  assign CAN_FIRE_RL_enc_pipeline =
	     (enc_round_0 == 24'd0 && !enc_plaintextFIFO$EMPTY_N ||
	      (enc_round_0 != 24'd0 || enc_plaintextFIFO$EMPTY_N) &&
	      (enc_round_0 != 24'd22 || enc_ciphertextFIFO$FULL_N)) &&
	     (enc_plaintextFIFO$EMPTY_N || enc_round_0 != 24'd0 ||
	      enc_round_1 != 24'd0) ;
  assign WILL_FIRE_RL_enc_pipeline = CAN_FIRE_RL_enc_pipeline ;

  // inputs to muxes for submodule ports
  assign MUX_enc_l_0$write_1__SEL_1 = WILL_FIRE_RL_enc_pipeline && _dfoo51 ;
  assign MUX_enc_l_1$write_1__SEL_1 = WILL_FIRE_RL_enc_pipeline && _dfoo49 ;
  assign MUX_enc_l_2$write_1__SEL_1 = WILL_FIRE_RL_enc_pipeline && _dfoo47 ;
  assign MUX_enc_l_0$write_1__VAL_1 =
	     (x__h3622 == 24'd0 &&
	      NOT_enc_round_0_EQ_0_OR_enc_plaintextFIFO_notE_ETC___d34) ?
	       IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d168 :
	       IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d624 ;
  assign MUX_enc_l_1$write_1__VAL_1 =
	     (x__h3622 == 24'd1 &&
	      NOT_enc_round_0_EQ_0_OR_enc_plaintextFIFO_notE_ETC___d34) ?
	       IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d168 :
	       IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d624 ;
  assign MUX_enc_l_2$write_1__VAL_1 =
	     (x__h3622 == 24'd2 &&
	      NOT_enc_round_0_EQ_0_OR_enc_plaintextFIFO_notE_ETC___d34) ?
	       IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d168 :
	       IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d624 ;

  // register enc_alpha
  assign enc_alpha$D_IN = 5'h0 ;
  assign enc_alpha$EN = 1'b0 ;

  // register enc_beta
  assign enc_beta$D_IN = 5'h0 ;
  assign enc_beta$EN = 1'b0 ;

  // register enc_k0
  assign enc_k0$D_IN = setKey_key[23:0] ;
  assign enc_k0$EN = EN_setKey ;

  // register enc_l_0
  assign enc_l_0$D_IN =
	     MUX_enc_l_0$write_1__SEL_1 ?
	       MUX_enc_l_0$write_1__VAL_1 :
	       setKey_key[47:24] ;
  assign enc_l_0$EN = WILL_FIRE_RL_enc_pipeline && _dfoo51 || EN_setKey ;

  // register enc_l_1
  assign enc_l_1$D_IN =
	     MUX_enc_l_1$write_1__SEL_1 ?
	       MUX_enc_l_1$write_1__VAL_1 :
	       setKey_key[71:48] ;
  assign enc_l_1$EN = WILL_FIRE_RL_enc_pipeline && _dfoo49 || EN_setKey ;

  // register enc_l_10
  assign enc_l_10$D_IN =
	     (x__h3622 == 24'd10 &&
	      NOT_enc_round_0_EQ_0_OR_enc_plaintextFIFO_notE_ETC___d34) ?
	       IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d168 :
	       IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d624 ;
  assign enc_l_10$EN = WILL_FIRE_RL_enc_pipeline && _dfoo31 ;

  // register enc_l_11
  assign enc_l_11$D_IN =
	     (x__h3622 == 24'd11 &&
	      NOT_enc_round_0_EQ_0_OR_enc_plaintextFIFO_notE_ETC___d34) ?
	       IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d168 :
	       IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d624 ;
  assign enc_l_11$EN = WILL_FIRE_RL_enc_pipeline && _dfoo29 ;

  // register enc_l_12
  assign enc_l_12$D_IN =
	     (x__h3622 == 24'd12 &&
	      NOT_enc_round_0_EQ_0_OR_enc_plaintextFIFO_notE_ETC___d34) ?
	       IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d168 :
	       IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d624 ;
  assign enc_l_12$EN = WILL_FIRE_RL_enc_pipeline && _dfoo27 ;

  // register enc_l_13
  assign enc_l_13$D_IN =
	     (x__h3622 == 24'd13 &&
	      NOT_enc_round_0_EQ_0_OR_enc_plaintextFIFO_notE_ETC___d34) ?
	       IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d168 :
	       IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d624 ;
  assign enc_l_13$EN = WILL_FIRE_RL_enc_pipeline && _dfoo25 ;

  // register enc_l_14
  assign enc_l_14$D_IN =
	     (x__h3622 == 24'd14 &&
	      NOT_enc_round_0_EQ_0_OR_enc_plaintextFIFO_notE_ETC___d34) ?
	       IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d168 :
	       IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d624 ;
  assign enc_l_14$EN = WILL_FIRE_RL_enc_pipeline && _dfoo23 ;

  // register enc_l_15
  assign enc_l_15$D_IN =
	     (x__h3622 == 24'd15 &&
	      NOT_enc_round_0_EQ_0_OR_enc_plaintextFIFO_notE_ETC___d34) ?
	       IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d168 :
	       IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d624 ;
  assign enc_l_15$EN = WILL_FIRE_RL_enc_pipeline && _dfoo21 ;

  // register enc_l_16
  assign enc_l_16$D_IN =
	     (x__h3622 == 24'd16 &&
	      NOT_enc_round_0_EQ_0_OR_enc_plaintextFIFO_notE_ETC___d34) ?
	       IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d168 :
	       IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d624 ;
  assign enc_l_16$EN = WILL_FIRE_RL_enc_pipeline && _dfoo19 ;

  // register enc_l_17
  assign enc_l_17$D_IN =
	     (x__h3622 == 24'd17 &&
	      NOT_enc_round_0_EQ_0_OR_enc_plaintextFIFO_notE_ETC___d34) ?
	       IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d168 :
	       IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d624 ;
  assign enc_l_17$EN = WILL_FIRE_RL_enc_pipeline && _dfoo17 ;

  // register enc_l_18
  assign enc_l_18$D_IN =
	     (x__h3622 == 24'd18 &&
	      NOT_enc_round_0_EQ_0_OR_enc_plaintextFIFO_notE_ETC___d34) ?
	       IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d168 :
	       IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d624 ;
  assign enc_l_18$EN = WILL_FIRE_RL_enc_pipeline && _dfoo15 ;

  // register enc_l_19
  assign enc_l_19$D_IN =
	     (x__h3622 == 24'd19 &&
	      NOT_enc_round_0_EQ_0_OR_enc_plaintextFIFO_notE_ETC___d34) ?
	       IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d168 :
	       IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d624 ;
  assign enc_l_19$EN = WILL_FIRE_RL_enc_pipeline && _dfoo13 ;

  // register enc_l_2
  assign enc_l_2$D_IN =
	     MUX_enc_l_2$write_1__SEL_1 ?
	       MUX_enc_l_2$write_1__VAL_1 :
	       setKey_key[95:72] ;
  assign enc_l_2$EN = WILL_FIRE_RL_enc_pipeline && _dfoo47 || EN_setKey ;

  // register enc_l_20
  assign enc_l_20$D_IN =
	     (x__h3622 == 24'd20 &&
	      NOT_enc_round_0_EQ_0_OR_enc_plaintextFIFO_notE_ETC___d34) ?
	       IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d168 :
	       IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d624 ;
  assign enc_l_20$EN = WILL_FIRE_RL_enc_pipeline && _dfoo11 ;

  // register enc_l_21
  assign enc_l_21$D_IN =
	     (x__h3622 == 24'd21 &&
	      NOT_enc_round_0_EQ_0_OR_enc_plaintextFIFO_notE_ETC___d34) ?
	       IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d168 :
	       IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d624 ;
  assign enc_l_21$EN = WILL_FIRE_RL_enc_pipeline && _dfoo9 ;

  // register enc_l_22
  assign enc_l_22$D_IN =
	     (x__h3622 == 24'd22 &&
	      NOT_enc_round_0_EQ_0_OR_enc_plaintextFIFO_notE_ETC___d34) ?
	       IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d168 :
	       IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d624 ;
  assign enc_l_22$EN = WILL_FIRE_RL_enc_pipeline && _dfoo7 ;

  // register enc_l_23
  assign enc_l_23$D_IN =
	     (x__h3622 == 24'd23 &&
	      NOT_enc_round_0_EQ_0_OR_enc_plaintextFIFO_notE_ETC___d34) ?
	       IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d168 :
	       IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d624 ;
  assign enc_l_23$EN = WILL_FIRE_RL_enc_pipeline && _dfoo5 ;

  // register enc_l_24
  assign enc_l_24$D_IN =
	     (x__h3622 == 24'd24 &&
	      NOT_enc_round_0_EQ_0_OR_enc_plaintextFIFO_notE_ETC___d34) ?
	       IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d168 :
	       IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d624 ;
  assign enc_l_24$EN = WILL_FIRE_RL_enc_pipeline && _dfoo3 ;

  // register enc_l_25
  assign enc_l_25$D_IN =
	     (x__h3622 == 24'd25 &&
	      NOT_enc_round_0_EQ_0_OR_enc_plaintextFIFO_notE_ETC___d34) ?
	       IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d168 :
	       IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d624 ;
  assign enc_l_25$EN = WILL_FIRE_RL_enc_pipeline && _dfoo1 ;

  // register enc_l_3
  assign enc_l_3$D_IN =
	     (x__h3622 == 24'd3 &&
	      NOT_enc_round_0_EQ_0_OR_enc_plaintextFIFO_notE_ETC___d34) ?
	       IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d168 :
	       IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d624 ;
  assign enc_l_3$EN = WILL_FIRE_RL_enc_pipeline && _dfoo45 ;

  // register enc_l_4
  assign enc_l_4$D_IN =
	     (x__h3622 == 24'd4 &&
	      NOT_enc_round_0_EQ_0_OR_enc_plaintextFIFO_notE_ETC___d34) ?
	       IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d168 :
	       IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d624 ;
  assign enc_l_4$EN = WILL_FIRE_RL_enc_pipeline && _dfoo43 ;

  // register enc_l_5
  assign enc_l_5$D_IN =
	     (x__h3622 == 24'd5 &&
	      NOT_enc_round_0_EQ_0_OR_enc_plaintextFIFO_notE_ETC___d34) ?
	       IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d168 :
	       IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d624 ;
  assign enc_l_5$EN = WILL_FIRE_RL_enc_pipeline && _dfoo41 ;

  // register enc_l_6
  assign enc_l_6$D_IN =
	     (x__h3622 == 24'd6 &&
	      NOT_enc_round_0_EQ_0_OR_enc_plaintextFIFO_notE_ETC___d34) ?
	       IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d168 :
	       IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d624 ;
  assign enc_l_6$EN = WILL_FIRE_RL_enc_pipeline && _dfoo39 ;

  // register enc_l_7
  assign enc_l_7$D_IN =
	     (x__h3622 == 24'd7 &&
	      NOT_enc_round_0_EQ_0_OR_enc_plaintextFIFO_notE_ETC___d34) ?
	       IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d168 :
	       IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d624 ;
  assign enc_l_7$EN = WILL_FIRE_RL_enc_pipeline && _dfoo37 ;

  // register enc_l_8
  assign enc_l_8$D_IN =
	     (x__h3622 == 24'd8 &&
	      NOT_enc_round_0_EQ_0_OR_enc_plaintextFIFO_notE_ETC___d34) ?
	       IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d168 :
	       IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d624 ;
  assign enc_l_8$EN = WILL_FIRE_RL_enc_pipeline && _dfoo35 ;

  // register enc_l_9
  assign enc_l_9$D_IN =
	     (x__h3622 == 24'd9 &&
	      NOT_enc_round_0_EQ_0_OR_enc_plaintextFIFO_notE_ETC___d34) ?
	       IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d168 :
	       IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d624 ;
  assign enc_l_9$EN = WILL_FIRE_RL_enc_pipeline && _dfoo33 ;

  // register enc_round_0
  assign enc_round_0$D_IN =
	     (enc_round_1 == 24'd0) ? enc_round_1 : enc_round_1 + 24'd1 ;
  assign enc_round_0$EN = CAN_FIRE_RL_enc_pipeline ;

  // register enc_round_1
  assign enc_round_1$D_IN =
	     (enc_round_0 == 24'd0 && !enc_plaintextFIFO$EMPTY_N ||
	      enc_round_0 == 24'd22) ?
	       24'd0 :
	       enc_round_0 + 24'd1 ;
  assign enc_round_1$EN = CAN_FIRE_RL_enc_pipeline ;

  // register enc_roundkey_0
  assign enc_roundkey_0$D_IN =
	     b__h60165 ^
	     IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d624 ;
  assign enc_roundkey_0$EN =
	     WILL_FIRE_RL_enc_pipeline && enc_round_1 != 24'd0 ;

  // register enc_roundkey_1
  assign enc_roundkey_1$D_IN =
	     b__h37455 ^
	     IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d168 ;
  assign enc_roundkey_1$EN =
	     WILL_FIRE_RL_enc_pipeline &&
	     (enc_round_0 != 24'd0 || enc_plaintextFIFO$EMPTY_N) &&
	     enc_round_0 != 24'd22 ;

  // register enc_xyReg_0
  assign enc_xyReg_0$D_IN =
	     { IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d868,
	       b__h81790 ^
	       IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d868 } ;
  assign enc_xyReg_0$EN = WILL_FIRE_RL_enc_pipeline && enc_round_1 != 24'd0 ;

  // register enc_xyReg_1
  assign enc_xyReg_1$D_IN =
	     { IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d321,
	       b__h26646 ^
	       IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d321 } ;
  assign enc_xyReg_1$EN =
	     WILL_FIRE_RL_enc_pipeline &&
	     (enc_round_0 != 24'd0 || enc_plaintextFIFO$EMPTY_N) &&
	     enc_round_0 != 24'd22 ;

  // submodule enc_ciphertextFIFO
  assign enc_ciphertextFIFO$D_IN =
	     { IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d321,
	       b__h26646 ^
	       IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d321 } ;
  assign enc_ciphertextFIFO$ENQ =
	     WILL_FIRE_RL_enc_pipeline && enc_round_0 == 24'd22 ;
  assign enc_ciphertextFIFO$DEQ = EN_getResult ;
  assign enc_ciphertextFIFO$CLR = 1'b0 ;

  // submodule enc_plaintextFIFO
  assign enc_plaintextFIFO$D_IN = inputMessage_text ;
  assign enc_plaintextFIFO$ENQ = EN_inputMessage ;
  assign enc_plaintextFIFO$DEQ =
	     WILL_FIRE_RL_enc_pipeline && enc_plaintextFIFO$EMPTY_N &&
	     enc_round_0 == 24'd0 ;
  assign enc_plaintextFIFO$CLR = 1'b0 ;

  // remaining internal signals
  assign IF_24_MINUS_enc_alpha_6_7_BIT_2_0_THEN_IF_24_M_ETC___d251 =
	     _24_MINUS_enc_alpha_6___d37[2] ?
	       (_24_MINUS_enc_alpha_6___d37[1] ?
		  (_24_MINUS_enc_alpha_6___d37[0] ?
		     { IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d223[16:0],
		       IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d223[23:17] } :
		     { IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d223[17:0],
		       IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d223[23:18] }) :
		  (_24_MINUS_enc_alpha_6___d37[0] ?
		     { IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d223[18:0],
		       IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d223[23:19] } :
		     { IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d223[19:0],
		       IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d223[23:20] })) :
	       (_24_MINUS_enc_alpha_6___d37[1] ?
		  (_24_MINUS_enc_alpha_6___d37[0] ?
		     { IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d223[20:0],
		       IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d223[23:21] } :
		     { IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d223[21:0],
		       IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d223[23:22] }) :
		  (_24_MINUS_enc_alpha_6___d37[0] ?
		     { IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d223[22:0],
		       IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d223[23] } :
		     IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d223)) ;
  assign IF_24_MINUS_enc_alpha_6_7_BIT_2_0_THEN_IF_24_M_ETC___d555 =
	     _24_MINUS_enc_alpha_6___d37[2] ?
	       (_24_MINUS_enc_alpha_6___d37[1] ?
		  (_24_MINUS_enc_alpha_6___d37[0] ?
		     { SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527[16:0],
		       SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527[23:17] } :
		     { SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527[17:0],
		       SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527[23:18] }) :
		  (_24_MINUS_enc_alpha_6___d37[0] ?
		     { SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527[18:0],
		       SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527[23:19] } :
		     { SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527[19:0],
		       SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527[23:20] })) :
	       (_24_MINUS_enc_alpha_6___d37[1] ?
		  (_24_MINUS_enc_alpha_6___d37[0] ?
		     { SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527[20:0],
		       SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527[23:21] } :
		     { SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527[21:0],
		       SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527[23:22] }) :
		  (_24_MINUS_enc_alpha_6___d37[0] ?
		     { SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527[22:0],
		       SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527[23] } :
		     SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527)) ;
  assign IF_24_MINUS_enc_alpha_6_7_BIT_2_0_THEN_IF_24_M_ETC___d799 =
	     _24_MINUS_enc_alpha_6___d37[2] ?
	       (_24_MINUS_enc_alpha_6___d37[1] ?
		  (_24_MINUS_enc_alpha_6___d37[0] ?
		     { IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d771[16:0],
		       IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d771[23:17] } :
		     { IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d771[17:0],
		       IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d771[23:18] }) :
		  (_24_MINUS_enc_alpha_6___d37[0] ?
		     { IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d771[18:0],
		       IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d771[23:19] } :
		     { IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d771[19:0],
		       IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d771[23:20] })) :
	       (_24_MINUS_enc_alpha_6___d37[1] ?
		  (_24_MINUS_enc_alpha_6___d37[0] ?
		     { IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d771[20:0],
		       IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d771[23:21] } :
		     { IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d771[21:0],
		       IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d771[23:22] }) :
		  (_24_MINUS_enc_alpha_6___d37[0] ?
		     { IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d771[22:0],
		       IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d771[23] } :
		     IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d771)) ;
  assign IF_24_MINUS_enc_alpha_6_7_BIT_2_0_THEN_IF_24_M_ETC___d98 =
	     _24_MINUS_enc_alpha_6___d37[2] ?
	       (_24_MINUS_enc_alpha_6___d37[1] ?
		  (_24_MINUS_enc_alpha_6___d37[0] ?
		     { SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70[16:0],
		       SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70[23:17] } :
		     { SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70[17:0],
		       SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70[23:18] }) :
		  (_24_MINUS_enc_alpha_6___d37[0] ?
		     { SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70[18:0],
		       SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70[23:19] } :
		     { SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70[19:0],
		       SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70[23:20] })) :
	       (_24_MINUS_enc_alpha_6___d37[1] ?
		  (_24_MINUS_enc_alpha_6___d37[0] ?
		     { SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70[20:0],
		       SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70[23:21] } :
		     { SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70[21:0],
		       SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70[23:22] }) :
		  (_24_MINUS_enc_alpha_6___d37[0] ?
		     { SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70[22:0],
		       SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70[23] } :
		     SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70)) ;
  assign IF_24_MINUS_enc_alpha_6_7_BIT_3_9_THEN_IF_24_M_ETC___d130 =
	     _24_MINUS_enc_alpha_6___d37[3] ?
	       IF_24_MINUS_enc_alpha_6_7_BIT_2_0_THEN_IF_24_M_ETC___d98 :
	       (_24_MINUS_enc_alpha_6___d37[2] ?
		  (_24_MINUS_enc_alpha_6___d37[1] ?
		     (_24_MINUS_enc_alpha_6___d37[0] ?
			{ SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70[0],
			  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70[23:1] } :
			{ SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70[1:0],
			  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70[23:2] }) :
		     (_24_MINUS_enc_alpha_6___d37[0] ?
			{ SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70[2:0],
			  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70[23:3] } :
			{ SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70[3:0],
			  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70[23:4] })) :
		  (_24_MINUS_enc_alpha_6___d37[1] ?
		     (_24_MINUS_enc_alpha_6___d37[0] ?
			{ SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70[4:0],
			  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70[23:5] } :
			{ SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70[5:0],
			  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70[23:6] }) :
		     (_24_MINUS_enc_alpha_6___d37[0] ?
			{ SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70[6:0],
			  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70[23:7] } :
			{ SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70[7:0],
			  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70[23:8] }))) ;
  assign IF_24_MINUS_enc_alpha_6_7_BIT_3_9_THEN_IF_24_M_ETC___d162 =
	     _24_MINUS_enc_alpha_6___d37[3] ?
	       (_24_MINUS_enc_alpha_6___d37[2] ?
		  (_24_MINUS_enc_alpha_6___d37[1] ?
		     (_24_MINUS_enc_alpha_6___d37[0] ?
			{ SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70[8:0],
			  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70[23:9] } :
			{ SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70[9:0],
			  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70[23:10] }) :
		     (_24_MINUS_enc_alpha_6___d37[0] ?
			{ SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70[10:0],
			  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70[23:11] } :
			{ SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70[11:0],
			  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70[23:12] })) :
		  (_24_MINUS_enc_alpha_6___d37[1] ?
		     (_24_MINUS_enc_alpha_6___d37[0] ?
			{ SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70[12:0],
			  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70[23:13] } :
			{ SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70[13:0],
			  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70[23:14] }) :
		     (_24_MINUS_enc_alpha_6___d37[0] ?
			{ SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70[14:0],
			  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70[23:15] } :
			{ SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70[15:0],
			  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70[23:16] }))) :
	       IF_24_MINUS_enc_alpha_6_7_BIT_2_0_THEN_IF_24_M_ETC___d98 ;
  assign IF_24_MINUS_enc_alpha_6_7_BIT_3_9_THEN_IF_24_M_ETC___d283 =
	     _24_MINUS_enc_alpha_6___d37[3] ?
	       IF_24_MINUS_enc_alpha_6_7_BIT_2_0_THEN_IF_24_M_ETC___d251 :
	       (_24_MINUS_enc_alpha_6___d37[2] ?
		  (_24_MINUS_enc_alpha_6___d37[1] ?
		     (_24_MINUS_enc_alpha_6___d37[0] ?
			{ IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d223[0],
			  IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d223[23:1] } :
			{ IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d223[1:0],
			  IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d223[23:2] }) :
		     (_24_MINUS_enc_alpha_6___d37[0] ?
			{ IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d223[2:0],
			  IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d223[23:3] } :
			{ IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d223[3:0],
			  IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d223[23:4] })) :
		  (_24_MINUS_enc_alpha_6___d37[1] ?
		     (_24_MINUS_enc_alpha_6___d37[0] ?
			{ IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d223[4:0],
			  IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d223[23:5] } :
			{ IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d223[5:0],
			  IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d223[23:6] }) :
		     (_24_MINUS_enc_alpha_6___d37[0] ?
			{ IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d223[6:0],
			  IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d223[23:7] } :
			{ IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d223[7:0],
			  IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d223[23:8] }))) ;
  assign IF_24_MINUS_enc_alpha_6_7_BIT_3_9_THEN_IF_24_M_ETC___d315 =
	     _24_MINUS_enc_alpha_6___d37[3] ?
	       (_24_MINUS_enc_alpha_6___d37[2] ?
		  (_24_MINUS_enc_alpha_6___d37[1] ?
		     (_24_MINUS_enc_alpha_6___d37[0] ?
			{ IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d223[8:0],
			  IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d223[23:9] } :
			{ IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d223[9:0],
			  IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d223[23:10] }) :
		     (_24_MINUS_enc_alpha_6___d37[0] ?
			{ IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d223[10:0],
			  IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d223[23:11] } :
			{ IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d223[11:0],
			  IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d223[23:12] })) :
		  (_24_MINUS_enc_alpha_6___d37[1] ?
		     (_24_MINUS_enc_alpha_6___d37[0] ?
			{ IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d223[12:0],
			  IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d223[23:13] } :
			{ IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d223[13:0],
			  IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d223[23:14] }) :
		     (_24_MINUS_enc_alpha_6___d37[0] ?
			{ IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d223[14:0],
			  IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d223[23:15] } :
			{ IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d223[15:0],
			  IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d223[23:16] }))) :
	       IF_24_MINUS_enc_alpha_6_7_BIT_2_0_THEN_IF_24_M_ETC___d251 ;
  assign IF_24_MINUS_enc_alpha_6_7_BIT_3_9_THEN_IF_24_M_ETC___d587 =
	     _24_MINUS_enc_alpha_6___d37[3] ?
	       IF_24_MINUS_enc_alpha_6_7_BIT_2_0_THEN_IF_24_M_ETC___d555 :
	       (_24_MINUS_enc_alpha_6___d37[2] ?
		  (_24_MINUS_enc_alpha_6___d37[1] ?
		     (_24_MINUS_enc_alpha_6___d37[0] ?
			{ SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527[0],
			  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527[23:1] } :
			{ SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527[1:0],
			  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527[23:2] }) :
		     (_24_MINUS_enc_alpha_6___d37[0] ?
			{ SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527[2:0],
			  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527[23:3] } :
			{ SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527[3:0],
			  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527[23:4] })) :
		  (_24_MINUS_enc_alpha_6___d37[1] ?
		     (_24_MINUS_enc_alpha_6___d37[0] ?
			{ SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527[4:0],
			  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527[23:5] } :
			{ SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527[5:0],
			  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527[23:6] }) :
		     (_24_MINUS_enc_alpha_6___d37[0] ?
			{ SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527[6:0],
			  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527[23:7] } :
			{ SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527[7:0],
			  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527[23:8] }))) ;
  assign IF_24_MINUS_enc_alpha_6_7_BIT_3_9_THEN_IF_24_M_ETC___d619 =
	     _24_MINUS_enc_alpha_6___d37[3] ?
	       (_24_MINUS_enc_alpha_6___d37[2] ?
		  (_24_MINUS_enc_alpha_6___d37[1] ?
		     (_24_MINUS_enc_alpha_6___d37[0] ?
			{ SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527[8:0],
			  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527[23:9] } :
			{ SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527[9:0],
			  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527[23:10] }) :
		     (_24_MINUS_enc_alpha_6___d37[0] ?
			{ SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527[10:0],
			  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527[23:11] } :
			{ SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527[11:0],
			  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527[23:12] })) :
		  (_24_MINUS_enc_alpha_6___d37[1] ?
		     (_24_MINUS_enc_alpha_6___d37[0] ?
			{ SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527[12:0],
			  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527[23:13] } :
			{ SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527[13:0],
			  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527[23:14] }) :
		     (_24_MINUS_enc_alpha_6___d37[0] ?
			{ SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527[14:0],
			  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527[23:15] } :
			{ SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527[15:0],
			  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527[23:16] }))) :
	       IF_24_MINUS_enc_alpha_6_7_BIT_2_0_THEN_IF_24_M_ETC___d555 ;
  assign IF_24_MINUS_enc_alpha_6_7_BIT_3_9_THEN_IF_24_M_ETC___d831 =
	     _24_MINUS_enc_alpha_6___d37[3] ?
	       IF_24_MINUS_enc_alpha_6_7_BIT_2_0_THEN_IF_24_M_ETC___d799 :
	       (_24_MINUS_enc_alpha_6___d37[2] ?
		  (_24_MINUS_enc_alpha_6___d37[1] ?
		     (_24_MINUS_enc_alpha_6___d37[0] ?
			{ IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d771[0],
			  IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d771[23:1] } :
			{ IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d771[1:0],
			  IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d771[23:2] }) :
		     (_24_MINUS_enc_alpha_6___d37[0] ?
			{ IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d771[2:0],
			  IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d771[23:3] } :
			{ IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d771[3:0],
			  IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d771[23:4] })) :
		  (_24_MINUS_enc_alpha_6___d37[1] ?
		     (_24_MINUS_enc_alpha_6___d37[0] ?
			{ IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d771[4:0],
			  IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d771[23:5] } :
			{ IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d771[5:0],
			  IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d771[23:6] }) :
		     (_24_MINUS_enc_alpha_6___d37[0] ?
			{ IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d771[6:0],
			  IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d771[23:7] } :
			{ IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d771[7:0],
			  IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d771[23:8] }))) ;
  assign IF_24_MINUS_enc_alpha_6_7_BIT_3_9_THEN_IF_24_M_ETC___d863 =
	     _24_MINUS_enc_alpha_6___d37[3] ?
	       (_24_MINUS_enc_alpha_6___d37[2] ?
		  (_24_MINUS_enc_alpha_6___d37[1] ?
		     (_24_MINUS_enc_alpha_6___d37[0] ?
			{ IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d771[8:0],
			  IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d771[23:9] } :
			{ IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d771[9:0],
			  IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d771[23:10] }) :
		     (_24_MINUS_enc_alpha_6___d37[0] ?
			{ IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d771[10:0],
			  IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d771[23:11] } :
			{ IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d771[11:0],
			  IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d771[23:12] })) :
		  (_24_MINUS_enc_alpha_6___d37[1] ?
		     (_24_MINUS_enc_alpha_6___d37[0] ?
			{ IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d771[12:0],
			  IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d771[23:13] } :
			{ IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d771[13:0],
			  IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d771[23:14] }) :
		     (_24_MINUS_enc_alpha_6___d37[0] ?
			{ IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d771[14:0],
			  IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d771[23:15] } :
			{ IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d771[15:0],
			  IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d771[23:16] }))) :
	       IF_24_MINUS_enc_alpha_6_7_BIT_2_0_THEN_IF_24_M_ETC___d799 ;
  assign IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d168 =
	     b__h4694 +
	     IF_enc_round_0_EQ_0_THEN_enc_k0_64_ELSE_enc_ro_ETC___d166 ^
	     enc_round_0 ;
  assign IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d321 =
	     b__h15790 +
	     IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d319 ^
	     IF_enc_round_0_EQ_0_THEN_enc_k0_64_ELSE_enc_ro_ETC___d166 ;
  assign IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d624 =
	     b__h49240 +
	     IF_enc_round_1_5_EQ_0_6_THEN_enc_k0_64_ELSE_en_ETC___d622 ^
	     enc_round_1 ;
  assign IF_24_MINUS_enc_alpha_6_7_BIT_4_8_THEN_IF_24_M_ETC___d868 =
	     b__h71014 +
	     IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d866 ^
	     IF_enc_round_1_5_EQ_0_6_THEN_enc_k0_64_ELSE_en_ETC___d622 ;
  assign IF_enc_beta_22_BIT_2_25_THEN_IF_enc_beta_22_BI_ETC___d355 =
	     enc_beta[2] ?
	       (enc_beta[1] ?
		  (enc_beta[0] ?
		     { IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d319[16:0],
		       IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d319[23:17] } :
		     { IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d319[17:0],
		       IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d319[23:18] }) :
		  (enc_beta[0] ?
		     { IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d319[18:0],
		       IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d319[23:19] } :
		     { IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d319[19:0],
		       IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d319[23:20] })) :
	       (enc_beta[1] ?
		  (enc_beta[0] ?
		     { IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d319[20:0],
		       IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d319[23:21] } :
		     { IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d319[21:0],
		       IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d319[23:22] }) :
		  (enc_beta[0] ?
		     { IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d319[22:0],
		       IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d319[23] } :
		     IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d319)) ;
  assign IF_enc_beta_22_BIT_2_25_THEN_IF_enc_beta_22_BI_ETC___d451 =
	     enc_beta[2] ?
	       (enc_beta[1] ?
		  (enc_beta[0] ?
		     { IF_enc_round_0_EQ_0_THEN_enc_k0_64_ELSE_enc_ro_ETC___d166[16:0],
		       IF_enc_round_0_EQ_0_THEN_enc_k0_64_ELSE_enc_ro_ETC___d166[23:17] } :
		     { IF_enc_round_0_EQ_0_THEN_enc_k0_64_ELSE_enc_ro_ETC___d166[17:0],
		       IF_enc_round_0_EQ_0_THEN_enc_k0_64_ELSE_enc_ro_ETC___d166[23:18] }) :
		  (enc_beta[0] ?
		     { IF_enc_round_0_EQ_0_THEN_enc_k0_64_ELSE_enc_ro_ETC___d166[18:0],
		       IF_enc_round_0_EQ_0_THEN_enc_k0_64_ELSE_enc_ro_ETC___d166[23:19] } :
		     { IF_enc_round_0_EQ_0_THEN_enc_k0_64_ELSE_enc_ro_ETC___d166[19:0],
		       IF_enc_round_0_EQ_0_THEN_enc_k0_64_ELSE_enc_ro_ETC___d166[23:20] })) :
	       (enc_beta[1] ?
		  (enc_beta[0] ?
		     { IF_enc_round_0_EQ_0_THEN_enc_k0_64_ELSE_enc_ro_ETC___d166[20:0],
		       IF_enc_round_0_EQ_0_THEN_enc_k0_64_ELSE_enc_ro_ETC___d166[23:21] } :
		     { IF_enc_round_0_EQ_0_THEN_enc_k0_64_ELSE_enc_ro_ETC___d166[21:0],
		       IF_enc_round_0_EQ_0_THEN_enc_k0_64_ELSE_enc_ro_ETC___d166[23:22] }) :
		  (enc_beta[0] ?
		     { IF_enc_round_0_EQ_0_THEN_enc_k0_64_ELSE_enc_ro_ETC___d166[22:0],
		       IF_enc_round_0_EQ_0_THEN_enc_k0_64_ELSE_enc_ro_ETC___d166[23] } :
		     IF_enc_round_0_EQ_0_THEN_enc_k0_64_ELSE_enc_ro_ETC___d166)) ;
  assign IF_enc_beta_22_BIT_2_25_THEN_IF_enc_beta_22_BI_ETC___d702 =
	     enc_beta[2] ?
	       (enc_beta[1] ?
		  (enc_beta[0] ?
		     { IF_enc_round_1_5_EQ_0_6_THEN_enc_k0_64_ELSE_en_ETC___d622[16:0],
		       IF_enc_round_1_5_EQ_0_6_THEN_enc_k0_64_ELSE_en_ETC___d622[23:17] } :
		     { IF_enc_round_1_5_EQ_0_6_THEN_enc_k0_64_ELSE_en_ETC___d622[17:0],
		       IF_enc_round_1_5_EQ_0_6_THEN_enc_k0_64_ELSE_en_ETC___d622[23:18] }) :
		  (enc_beta[0] ?
		     { IF_enc_round_1_5_EQ_0_6_THEN_enc_k0_64_ELSE_en_ETC___d622[18:0],
		       IF_enc_round_1_5_EQ_0_6_THEN_enc_k0_64_ELSE_en_ETC___d622[23:19] } :
		     { IF_enc_round_1_5_EQ_0_6_THEN_enc_k0_64_ELSE_en_ETC___d622[19:0],
		       IF_enc_round_1_5_EQ_0_6_THEN_enc_k0_64_ELSE_en_ETC___d622[23:20] })) :
	       (enc_beta[1] ?
		  (enc_beta[0] ?
		     { IF_enc_round_1_5_EQ_0_6_THEN_enc_k0_64_ELSE_en_ETC___d622[20:0],
		       IF_enc_round_1_5_EQ_0_6_THEN_enc_k0_64_ELSE_en_ETC___d622[23:21] } :
		     { IF_enc_round_1_5_EQ_0_6_THEN_enc_k0_64_ELSE_en_ETC___d622[21:0],
		       IF_enc_round_1_5_EQ_0_6_THEN_enc_k0_64_ELSE_en_ETC___d622[23:22] }) :
		  (enc_beta[0] ?
		     { IF_enc_round_1_5_EQ_0_6_THEN_enc_k0_64_ELSE_en_ETC___d622[22:0],
		       IF_enc_round_1_5_EQ_0_6_THEN_enc_k0_64_ELSE_en_ETC___d622[23] } :
		     IF_enc_round_1_5_EQ_0_6_THEN_enc_k0_64_ELSE_en_ETC___d622)) ;
  assign IF_enc_beta_22_BIT_2_25_THEN_IF_enc_beta_22_BI_ETC___d896 =
	     enc_beta[2] ?
	       (enc_beta[1] ?
		  (enc_beta[0] ?
		     { IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d866[16:0],
		       IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d866[23:17] } :
		     { IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d866[17:0],
		       IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d866[23:18] }) :
		  (enc_beta[0] ?
		     { IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d866[18:0],
		       IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d866[23:19] } :
		     { IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d866[19:0],
		       IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d866[23:20] })) :
	       (enc_beta[1] ?
		  (enc_beta[0] ?
		     { IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d866[20:0],
		       IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d866[23:21] } :
		     { IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d866[21:0],
		       IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d866[23:22] }) :
		  (enc_beta[0] ?
		     { IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d866[22:0],
		       IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d866[23] } :
		     IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d866)) ;
  assign IF_enc_beta_22_BIT_3_24_THEN_IF_enc_beta_22_BI_ETC___d387 =
	     enc_beta[3] ?
	       IF_enc_beta_22_BIT_2_25_THEN_IF_enc_beta_22_BI_ETC___d355 :
	       (enc_beta[2] ?
		  (enc_beta[1] ?
		     (enc_beta[0] ?
			{ IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d319[0],
			  IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d319[23:1] } :
			{ IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d319[1:0],
			  IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d319[23:2] }) :
		     (enc_beta[0] ?
			{ IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d319[2:0],
			  IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d319[23:3] } :
			{ IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d319[3:0],
			  IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d319[23:4] })) :
		  (enc_beta[1] ?
		     (enc_beta[0] ?
			{ IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d319[4:0],
			  IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d319[23:5] } :
			{ IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d319[5:0],
			  IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d319[23:6] }) :
		     (enc_beta[0] ?
			{ IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d319[6:0],
			  IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d319[23:7] } :
			{ IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d319[7:0],
			  IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d319[23:8] }))) ;
  assign IF_enc_beta_22_BIT_3_24_THEN_IF_enc_beta_22_BI_ETC___d419 =
	     enc_beta[3] ?
	       (enc_beta[2] ?
		  (enc_beta[1] ?
		     (enc_beta[0] ?
			{ IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d319[8:0],
			  IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d319[23:9] } :
			{ IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d319[9:0],
			  IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d319[23:10] }) :
		     (enc_beta[0] ?
			{ IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d319[10:0],
			  IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d319[23:11] } :
			{ IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d319[11:0],
			  IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d319[23:12] })) :
		  (enc_beta[1] ?
		     (enc_beta[0] ?
			{ IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d319[12:0],
			  IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d319[23:13] } :
			{ IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d319[13:0],
			  IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d319[23:14] }) :
		     (enc_beta[0] ?
			{ IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d319[14:0],
			  IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d319[23:15] } :
			{ IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d319[15:0],
			  IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d319[23:16] }))) :
	       IF_enc_beta_22_BIT_2_25_THEN_IF_enc_beta_22_BI_ETC___d355 ;
  assign IF_enc_beta_22_BIT_3_24_THEN_IF_enc_beta_22_BI_ETC___d483 =
	     enc_beta[3] ?
	       IF_enc_beta_22_BIT_2_25_THEN_IF_enc_beta_22_BI_ETC___d451 :
	       (enc_beta[2] ?
		  (enc_beta[1] ?
		     (enc_beta[0] ?
			{ IF_enc_round_0_EQ_0_THEN_enc_k0_64_ELSE_enc_ro_ETC___d166[0],
			  IF_enc_round_0_EQ_0_THEN_enc_k0_64_ELSE_enc_ro_ETC___d166[23:1] } :
			{ IF_enc_round_0_EQ_0_THEN_enc_k0_64_ELSE_enc_ro_ETC___d166[1:0],
			  IF_enc_round_0_EQ_0_THEN_enc_k0_64_ELSE_enc_ro_ETC___d166[23:2] }) :
		     (enc_beta[0] ?
			{ IF_enc_round_0_EQ_0_THEN_enc_k0_64_ELSE_enc_ro_ETC___d166[2:0],
			  IF_enc_round_0_EQ_0_THEN_enc_k0_64_ELSE_enc_ro_ETC___d166[23:3] } :
			{ IF_enc_round_0_EQ_0_THEN_enc_k0_64_ELSE_enc_ro_ETC___d166[3:0],
			  IF_enc_round_0_EQ_0_THEN_enc_k0_64_ELSE_enc_ro_ETC___d166[23:4] })) :
		  (enc_beta[1] ?
		     (enc_beta[0] ?
			{ IF_enc_round_0_EQ_0_THEN_enc_k0_64_ELSE_enc_ro_ETC___d166[4:0],
			  IF_enc_round_0_EQ_0_THEN_enc_k0_64_ELSE_enc_ro_ETC___d166[23:5] } :
			{ IF_enc_round_0_EQ_0_THEN_enc_k0_64_ELSE_enc_ro_ETC___d166[5:0],
			  IF_enc_round_0_EQ_0_THEN_enc_k0_64_ELSE_enc_ro_ETC___d166[23:6] }) :
		     (enc_beta[0] ?
			{ IF_enc_round_0_EQ_0_THEN_enc_k0_64_ELSE_enc_ro_ETC___d166[6:0],
			  IF_enc_round_0_EQ_0_THEN_enc_k0_64_ELSE_enc_ro_ETC___d166[23:7] } :
			{ IF_enc_round_0_EQ_0_THEN_enc_k0_64_ELSE_enc_ro_ETC___d166[7:0],
			  IF_enc_round_0_EQ_0_THEN_enc_k0_64_ELSE_enc_ro_ETC___d166[23:8] }))) ;
  assign IF_enc_beta_22_BIT_3_24_THEN_IF_enc_beta_22_BI_ETC___d515 =
	     enc_beta[3] ?
	       (enc_beta[2] ?
		  (enc_beta[1] ?
		     (enc_beta[0] ?
			{ IF_enc_round_0_EQ_0_THEN_enc_k0_64_ELSE_enc_ro_ETC___d166[8:0],
			  IF_enc_round_0_EQ_0_THEN_enc_k0_64_ELSE_enc_ro_ETC___d166[23:9] } :
			{ IF_enc_round_0_EQ_0_THEN_enc_k0_64_ELSE_enc_ro_ETC___d166[9:0],
			  IF_enc_round_0_EQ_0_THEN_enc_k0_64_ELSE_enc_ro_ETC___d166[23:10] }) :
		     (enc_beta[0] ?
			{ IF_enc_round_0_EQ_0_THEN_enc_k0_64_ELSE_enc_ro_ETC___d166[10:0],
			  IF_enc_round_0_EQ_0_THEN_enc_k0_64_ELSE_enc_ro_ETC___d166[23:11] } :
			{ IF_enc_round_0_EQ_0_THEN_enc_k0_64_ELSE_enc_ro_ETC___d166[11:0],
			  IF_enc_round_0_EQ_0_THEN_enc_k0_64_ELSE_enc_ro_ETC___d166[23:12] })) :
		  (enc_beta[1] ?
		     (enc_beta[0] ?
			{ IF_enc_round_0_EQ_0_THEN_enc_k0_64_ELSE_enc_ro_ETC___d166[12:0],
			  IF_enc_round_0_EQ_0_THEN_enc_k0_64_ELSE_enc_ro_ETC___d166[23:13] } :
			{ IF_enc_round_0_EQ_0_THEN_enc_k0_64_ELSE_enc_ro_ETC___d166[13:0],
			  IF_enc_round_0_EQ_0_THEN_enc_k0_64_ELSE_enc_ro_ETC___d166[23:14] }) :
		     (enc_beta[0] ?
			{ IF_enc_round_0_EQ_0_THEN_enc_k0_64_ELSE_enc_ro_ETC___d166[14:0],
			  IF_enc_round_0_EQ_0_THEN_enc_k0_64_ELSE_enc_ro_ETC___d166[23:15] } :
			{ IF_enc_round_0_EQ_0_THEN_enc_k0_64_ELSE_enc_ro_ETC___d166[15:0],
			  IF_enc_round_0_EQ_0_THEN_enc_k0_64_ELSE_enc_ro_ETC___d166[23:16] }))) :
	       IF_enc_beta_22_BIT_2_25_THEN_IF_enc_beta_22_BI_ETC___d451 ;
  assign IF_enc_beta_22_BIT_3_24_THEN_IF_enc_beta_22_BI_ETC___d734 =
	     enc_beta[3] ?
	       IF_enc_beta_22_BIT_2_25_THEN_IF_enc_beta_22_BI_ETC___d702 :
	       (enc_beta[2] ?
		  (enc_beta[1] ?
		     (enc_beta[0] ?
			{ IF_enc_round_1_5_EQ_0_6_THEN_enc_k0_64_ELSE_en_ETC___d622[0],
			  IF_enc_round_1_5_EQ_0_6_THEN_enc_k0_64_ELSE_en_ETC___d622[23:1] } :
			{ IF_enc_round_1_5_EQ_0_6_THEN_enc_k0_64_ELSE_en_ETC___d622[1:0],
			  IF_enc_round_1_5_EQ_0_6_THEN_enc_k0_64_ELSE_en_ETC___d622[23:2] }) :
		     (enc_beta[0] ?
			{ IF_enc_round_1_5_EQ_0_6_THEN_enc_k0_64_ELSE_en_ETC___d622[2:0],
			  IF_enc_round_1_5_EQ_0_6_THEN_enc_k0_64_ELSE_en_ETC___d622[23:3] } :
			{ IF_enc_round_1_5_EQ_0_6_THEN_enc_k0_64_ELSE_en_ETC___d622[3:0],
			  IF_enc_round_1_5_EQ_0_6_THEN_enc_k0_64_ELSE_en_ETC___d622[23:4] })) :
		  (enc_beta[1] ?
		     (enc_beta[0] ?
			{ IF_enc_round_1_5_EQ_0_6_THEN_enc_k0_64_ELSE_en_ETC___d622[4:0],
			  IF_enc_round_1_5_EQ_0_6_THEN_enc_k0_64_ELSE_en_ETC___d622[23:5] } :
			{ IF_enc_round_1_5_EQ_0_6_THEN_enc_k0_64_ELSE_en_ETC___d622[5:0],
			  IF_enc_round_1_5_EQ_0_6_THEN_enc_k0_64_ELSE_en_ETC___d622[23:6] }) :
		     (enc_beta[0] ?
			{ IF_enc_round_1_5_EQ_0_6_THEN_enc_k0_64_ELSE_en_ETC___d622[6:0],
			  IF_enc_round_1_5_EQ_0_6_THEN_enc_k0_64_ELSE_en_ETC___d622[23:7] } :
			{ IF_enc_round_1_5_EQ_0_6_THEN_enc_k0_64_ELSE_en_ETC___d622[7:0],
			  IF_enc_round_1_5_EQ_0_6_THEN_enc_k0_64_ELSE_en_ETC___d622[23:8] }))) ;
  assign IF_enc_beta_22_BIT_3_24_THEN_IF_enc_beta_22_BI_ETC___d766 =
	     enc_beta[3] ?
	       (enc_beta[2] ?
		  (enc_beta[1] ?
		     (enc_beta[0] ?
			{ IF_enc_round_1_5_EQ_0_6_THEN_enc_k0_64_ELSE_en_ETC___d622[8:0],
			  IF_enc_round_1_5_EQ_0_6_THEN_enc_k0_64_ELSE_en_ETC___d622[23:9] } :
			{ IF_enc_round_1_5_EQ_0_6_THEN_enc_k0_64_ELSE_en_ETC___d622[9:0],
			  IF_enc_round_1_5_EQ_0_6_THEN_enc_k0_64_ELSE_en_ETC___d622[23:10] }) :
		     (enc_beta[0] ?
			{ IF_enc_round_1_5_EQ_0_6_THEN_enc_k0_64_ELSE_en_ETC___d622[10:0],
			  IF_enc_round_1_5_EQ_0_6_THEN_enc_k0_64_ELSE_en_ETC___d622[23:11] } :
			{ IF_enc_round_1_5_EQ_0_6_THEN_enc_k0_64_ELSE_en_ETC___d622[11:0],
			  IF_enc_round_1_5_EQ_0_6_THEN_enc_k0_64_ELSE_en_ETC___d622[23:12] })) :
		  (enc_beta[1] ?
		     (enc_beta[0] ?
			{ IF_enc_round_1_5_EQ_0_6_THEN_enc_k0_64_ELSE_en_ETC___d622[12:0],
			  IF_enc_round_1_5_EQ_0_6_THEN_enc_k0_64_ELSE_en_ETC___d622[23:13] } :
			{ IF_enc_round_1_5_EQ_0_6_THEN_enc_k0_64_ELSE_en_ETC___d622[13:0],
			  IF_enc_round_1_5_EQ_0_6_THEN_enc_k0_64_ELSE_en_ETC___d622[23:14] }) :
		     (enc_beta[0] ?
			{ IF_enc_round_1_5_EQ_0_6_THEN_enc_k0_64_ELSE_en_ETC___d622[14:0],
			  IF_enc_round_1_5_EQ_0_6_THEN_enc_k0_64_ELSE_en_ETC___d622[23:15] } :
			{ IF_enc_round_1_5_EQ_0_6_THEN_enc_k0_64_ELSE_en_ETC___d622[15:0],
			  IF_enc_round_1_5_EQ_0_6_THEN_enc_k0_64_ELSE_en_ETC___d622[23:16] }))) :
	       IF_enc_beta_22_BIT_2_25_THEN_IF_enc_beta_22_BI_ETC___d702 ;
  assign IF_enc_beta_22_BIT_3_24_THEN_IF_enc_beta_22_BI_ETC___d928 =
	     enc_beta[3] ?
	       IF_enc_beta_22_BIT_2_25_THEN_IF_enc_beta_22_BI_ETC___d896 :
	       (enc_beta[2] ?
		  (enc_beta[1] ?
		     (enc_beta[0] ?
			{ IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d866[0],
			  IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d866[23:1] } :
			{ IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d866[1:0],
			  IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d866[23:2] }) :
		     (enc_beta[0] ?
			{ IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d866[2:0],
			  IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d866[23:3] } :
			{ IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d866[3:0],
			  IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d866[23:4] })) :
		  (enc_beta[1] ?
		     (enc_beta[0] ?
			{ IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d866[4:0],
			  IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d866[23:5] } :
			{ IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d866[5:0],
			  IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d866[23:6] }) :
		     (enc_beta[0] ?
			{ IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d866[6:0],
			  IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d866[23:7] } :
			{ IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d866[7:0],
			  IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d866[23:8] }))) ;
  assign IF_enc_beta_22_BIT_3_24_THEN_IF_enc_beta_22_BI_ETC___d960 =
	     enc_beta[3] ?
	       (enc_beta[2] ?
		  (enc_beta[1] ?
		     (enc_beta[0] ?
			{ IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d866[8:0],
			  IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d866[23:9] } :
			{ IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d866[9:0],
			  IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d866[23:10] }) :
		     (enc_beta[0] ?
			{ IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d866[10:0],
			  IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d866[23:11] } :
			{ IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d866[11:0],
			  IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d866[23:12] })) :
		  (enc_beta[1] ?
		     (enc_beta[0] ?
			{ IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d866[12:0],
			  IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d866[23:13] } :
			{ IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d866[13:0],
			  IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d866[23:14] }) :
		     (enc_beta[0] ?
			{ IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d866[14:0],
			  IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d866[23:15] } :
			{ IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d866[15:0],
			  IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d866[23:16] }))) :
	       IF_enc_beta_22_BIT_2_25_THEN_IF_enc_beta_22_BI_ETC___d896 ;
  assign IF_enc_round_0_EQ_0_THEN_enc_k0_64_ELSE_enc_ro_ETC___d166 =
	     (enc_round_0 == 24'd0) ? enc_k0 : enc_roundkey_0 ;
  assign IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d223 =
	     (enc_round_0 == 24'd0) ?
	       enc_plaintextFIFO$D_OUT[47:24] :
	       enc_xyReg_0[47:24] ;
  assign IF_enc_round_0_EQ_0_THEN_enc_plaintextFIFO_fir_ETC___d319 =
	     (enc_round_0 == 24'd0) ?
	       enc_plaintextFIFO$D_OUT[23:0] :
	       enc_xyReg_0[23:0] ;
  assign IF_enc_round_1_5_EQ_0_6_THEN_enc_k0_64_ELSE_en_ETC___d622 =
	     (enc_round_1 == 24'd0) ? enc_k0 : enc_roundkey_1 ;
  assign IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d771 =
	     (enc_round_1 == 24'd0) ?
	       enc_plaintextFIFO$D_OUT[47:24] :
	       enc_xyReg_1[47:24] ;
  assign IF_enc_round_1_5_EQ_0_6_THEN_enc_plaintextFIFO_ETC___d866 =
	     (enc_round_1 == 24'd0) ?
	       enc_plaintextFIFO$D_OUT[23:0] :
	       enc_xyReg_1[23:0] ;
  assign NOT_enc_round_0_EQ_0_OR_enc_plaintextFIFO_notE_ETC___d34 =
	     (enc_round_0 != 24'd0 || enc_plaintextFIFO$EMPTY_N) &&
	     (enc_round_0 == 24'd0 ||
	      2'd1 + ((enc_round_0 == enc_round_1) ? 2'd1 : 2'd0) == 2'd1) ;
  assign _24_MINUS_enc_alpha_6___d37 = 5'd24 - enc_alpha ;
  assign _dfoo1 =
	     x__h3622 == 24'd25 &&
	     NOT_enc_round_0_EQ_0_OR_enc_plaintextFIFO_notE_ETC___d34 ||
	     x__h48938 == 24'd25 && enc_round_1 != 24'd0 &&
	     enc_round_1 != enc_round_0 ;
  assign _dfoo11 =
	     x__h3622 == 24'd20 &&
	     NOT_enc_round_0_EQ_0_OR_enc_plaintextFIFO_notE_ETC___d34 ||
	     x__h48938 == 24'd20 && enc_round_1 != 24'd0 &&
	     enc_round_1 != enc_round_0 ;
  assign _dfoo13 =
	     x__h3622 == 24'd19 &&
	     NOT_enc_round_0_EQ_0_OR_enc_plaintextFIFO_notE_ETC___d34 ||
	     x__h48938 == 24'd19 && enc_round_1 != 24'd0 &&
	     enc_round_1 != enc_round_0 ;
  assign _dfoo15 =
	     x__h3622 == 24'd18 &&
	     NOT_enc_round_0_EQ_0_OR_enc_plaintextFIFO_notE_ETC___d34 ||
	     x__h48938 == 24'd18 && enc_round_1 != 24'd0 &&
	     enc_round_1 != enc_round_0 ;
  assign _dfoo17 =
	     x__h3622 == 24'd17 &&
	     NOT_enc_round_0_EQ_0_OR_enc_plaintextFIFO_notE_ETC___d34 ||
	     x__h48938 == 24'd17 && enc_round_1 != 24'd0 &&
	     enc_round_1 != enc_round_0 ;
  assign _dfoo19 =
	     x__h3622 == 24'd16 &&
	     NOT_enc_round_0_EQ_0_OR_enc_plaintextFIFO_notE_ETC___d34 ||
	     x__h48938 == 24'd16 && enc_round_1 != 24'd0 &&
	     enc_round_1 != enc_round_0 ;
  assign _dfoo21 =
	     x__h3622 == 24'd15 &&
	     NOT_enc_round_0_EQ_0_OR_enc_plaintextFIFO_notE_ETC___d34 ||
	     x__h48938 == 24'd15 && enc_round_1 != 24'd0 &&
	     enc_round_1 != enc_round_0 ;
  assign _dfoo23 =
	     x__h3622 == 24'd14 &&
	     NOT_enc_round_0_EQ_0_OR_enc_plaintextFIFO_notE_ETC___d34 ||
	     x__h48938 == 24'd14 && enc_round_1 != 24'd0 &&
	     enc_round_1 != enc_round_0 ;
  assign _dfoo25 =
	     x__h3622 == 24'd13 &&
	     NOT_enc_round_0_EQ_0_OR_enc_plaintextFIFO_notE_ETC___d34 ||
	     x__h48938 == 24'd13 && enc_round_1 != 24'd0 &&
	     enc_round_1 != enc_round_0 ;
  assign _dfoo27 =
	     x__h3622 == 24'd12 &&
	     NOT_enc_round_0_EQ_0_OR_enc_plaintextFIFO_notE_ETC___d34 ||
	     x__h48938 == 24'd12 && enc_round_1 != 24'd0 &&
	     enc_round_1 != enc_round_0 ;
  assign _dfoo29 =
	     x__h3622 == 24'd11 &&
	     NOT_enc_round_0_EQ_0_OR_enc_plaintextFIFO_notE_ETC___d34 ||
	     x__h48938 == 24'd11 && enc_round_1 != 24'd0 &&
	     enc_round_1 != enc_round_0 ;
  assign _dfoo3 =
	     x__h3622 == 24'd24 &&
	     NOT_enc_round_0_EQ_0_OR_enc_plaintextFIFO_notE_ETC___d34 ||
	     x__h48938 == 24'd24 && enc_round_1 != 24'd0 &&
	     enc_round_1 != enc_round_0 ;
  assign _dfoo31 =
	     x__h3622 == 24'd10 &&
	     NOT_enc_round_0_EQ_0_OR_enc_plaintextFIFO_notE_ETC___d34 ||
	     x__h48938 == 24'd10 && enc_round_1 != 24'd0 &&
	     enc_round_1 != enc_round_0 ;
  assign _dfoo33 =
	     x__h3622 == 24'd9 &&
	     NOT_enc_round_0_EQ_0_OR_enc_plaintextFIFO_notE_ETC___d34 ||
	     x__h48938 == 24'd9 && enc_round_1 != 24'd0 &&
	     enc_round_1 != enc_round_0 ;
  assign _dfoo35 =
	     x__h3622 == 24'd8 &&
	     NOT_enc_round_0_EQ_0_OR_enc_plaintextFIFO_notE_ETC___d34 ||
	     x__h48938 == 24'd8 && enc_round_1 != 24'd0 &&
	     enc_round_1 != enc_round_0 ;
  assign _dfoo37 =
	     x__h3622 == 24'd7 &&
	     NOT_enc_round_0_EQ_0_OR_enc_plaintextFIFO_notE_ETC___d34 ||
	     x__h48938 == 24'd7 && enc_round_1 != 24'd0 &&
	     enc_round_1 != enc_round_0 ;
  assign _dfoo39 =
	     x__h3622 == 24'd6 &&
	     NOT_enc_round_0_EQ_0_OR_enc_plaintextFIFO_notE_ETC___d34 ||
	     x__h48938 == 24'd6 && enc_round_1 != 24'd0 &&
	     enc_round_1 != enc_round_0 ;
  assign _dfoo41 =
	     x__h3622 == 24'd5 &&
	     NOT_enc_round_0_EQ_0_OR_enc_plaintextFIFO_notE_ETC___d34 ||
	     x__h48938 == 24'd5 && enc_round_1 != 24'd0 &&
	     enc_round_1 != enc_round_0 ;
  assign _dfoo43 =
	     x__h3622 == 24'd4 &&
	     NOT_enc_round_0_EQ_0_OR_enc_plaintextFIFO_notE_ETC___d34 ||
	     x__h48938 == 24'd4 && enc_round_1 != 24'd0 &&
	     enc_round_1 != enc_round_0 ;
  assign _dfoo45 =
	     x__h3622 == 24'd3 &&
	     NOT_enc_round_0_EQ_0_OR_enc_plaintextFIFO_notE_ETC___d34 ||
	     x__h48938 == 24'd3 && enc_round_1 != 24'd0 &&
	     enc_round_1 != enc_round_0 ;
  assign _dfoo47 =
	     x__h3622 == 24'd2 &&
	     NOT_enc_round_0_EQ_0_OR_enc_plaintextFIFO_notE_ETC___d34 ||
	     x__h48938 == 24'd2 && enc_round_1 != 24'd0 &&
	     enc_round_1 != enc_round_0 ;
  assign _dfoo49 =
	     x__h3622 == 24'd1 &&
	     NOT_enc_round_0_EQ_0_OR_enc_plaintextFIFO_notE_ETC___d34 ||
	     x__h48938 == 24'd1 && enc_round_1 != 24'd0 &&
	     enc_round_1 != enc_round_0 ;
  assign _dfoo5 =
	     x__h3622 == 24'd23 &&
	     NOT_enc_round_0_EQ_0_OR_enc_plaintextFIFO_notE_ETC___d34 ||
	     x__h48938 == 24'd23 && enc_round_1 != 24'd0 &&
	     enc_round_1 != enc_round_0 ;
  assign _dfoo51 =
	     x__h3622 == 24'd0 &&
	     NOT_enc_round_0_EQ_0_OR_enc_plaintextFIFO_notE_ETC___d34 ||
	     x__h48938 == 24'd0 && enc_round_1 != 24'd0 &&
	     enc_round_1 != enc_round_0 ;
  assign _dfoo7 =
	     x__h3622 == 24'd22 &&
	     NOT_enc_round_0_EQ_0_OR_enc_plaintextFIFO_notE_ETC___d34 ||
	     x__h48938 == 24'd22 && enc_round_1 != 24'd0 &&
	     enc_round_1 != enc_round_0 ;
  assign _dfoo9 =
	     x__h3622 == 24'd21 &&
	     NOT_enc_round_0_EQ_0_OR_enc_plaintextFIFO_notE_ETC___d34 ||
	     x__h48938 == 24'd21 && enc_round_1 != 24'd0 &&
	     enc_round_1 != enc_round_0 ;
  assign b__h15790 =
	     _24_MINUS_enc_alpha_6___d37[4] ?
	       IF_24_MINUS_enc_alpha_6_7_BIT_3_9_THEN_IF_24_M_ETC___d283 :
	       IF_24_MINUS_enc_alpha_6_7_BIT_3_9_THEN_IF_24_M_ETC___d315 ;
  assign b__h26646 =
	     enc_beta[4] ?
	       IF_enc_beta_22_BIT_3_24_THEN_IF_enc_beta_22_BI_ETC___d387 :
	       IF_enc_beta_22_BIT_3_24_THEN_IF_enc_beta_22_BI_ETC___d419 ;
  assign b__h37455 =
	     enc_beta[4] ?
	       IF_enc_beta_22_BIT_3_24_THEN_IF_enc_beta_22_BI_ETC___d483 :
	       IF_enc_beta_22_BIT_3_24_THEN_IF_enc_beta_22_BI_ETC___d515 ;
  assign b__h4694 =
	     _24_MINUS_enc_alpha_6___d37[4] ?
	       IF_24_MINUS_enc_alpha_6_7_BIT_3_9_THEN_IF_24_M_ETC___d130 :
	       IF_24_MINUS_enc_alpha_6_7_BIT_3_9_THEN_IF_24_M_ETC___d162 ;
  assign b__h49240 =
	     _24_MINUS_enc_alpha_6___d37[4] ?
	       IF_24_MINUS_enc_alpha_6_7_BIT_3_9_THEN_IF_24_M_ETC___d587 :
	       IF_24_MINUS_enc_alpha_6_7_BIT_3_9_THEN_IF_24_M_ETC___d619 ;
  assign b__h60165 =
	     enc_beta[4] ?
	       IF_enc_beta_22_BIT_3_24_THEN_IF_enc_beta_22_BI_ETC___d734 :
	       IF_enc_beta_22_BIT_3_24_THEN_IF_enc_beta_22_BI_ETC___d766 ;
  assign b__h71014 =
	     _24_MINUS_enc_alpha_6___d37[4] ?
	       IF_24_MINUS_enc_alpha_6_7_BIT_3_9_THEN_IF_24_M_ETC___d831 :
	       IF_24_MINUS_enc_alpha_6_7_BIT_3_9_THEN_IF_24_M_ETC___d863 ;
  assign b__h81790 =
	     enc_beta[4] ?
	       IF_enc_beta_22_BIT_3_24_THEN_IF_enc_beta_22_BI_ETC___d928 :
	       IF_enc_beta_22_BIT_3_24_THEN_IF_enc_beta_22_BI_ETC___d960 ;
  assign x__h3622 = enc_round_0 + 24'd4 - 24'd1 ;
  assign x__h48938 = enc_round_1 + 24'd4 - 24'd1 ;
  always@(enc_round_0 or
	  enc_l_0 or
	  enc_l_1 or
	  enc_l_2 or
	  enc_l_3 or
	  enc_l_4 or
	  enc_l_5 or
	  enc_l_6 or
	  enc_l_7 or
	  enc_l_8 or
	  enc_l_9 or
	  enc_l_10 or
	  enc_l_11 or
	  enc_l_12 or
	  enc_l_13 or
	  enc_l_14 or
	  enc_l_15 or
	  enc_l_16 or
	  enc_l_17 or
	  enc_l_18 or
	  enc_l_19 or
	  enc_l_20 or
	  enc_l_21 or enc_l_22 or enc_l_23 or enc_l_24 or enc_l_25)
  begin
    case (enc_round_0)
      24'd0:
	  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70 = enc_l_0;
      24'd1:
	  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70 = enc_l_1;
      24'd2:
	  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70 = enc_l_2;
      24'd3:
	  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70 = enc_l_3;
      24'd4:
	  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70 = enc_l_4;
      24'd5:
	  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70 = enc_l_5;
      24'd6:
	  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70 = enc_l_6;
      24'd7:
	  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70 = enc_l_7;
      24'd8:
	  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70 = enc_l_8;
      24'd9:
	  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70 = enc_l_9;
      24'd10:
	  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70 = enc_l_10;
      24'd11:
	  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70 = enc_l_11;
      24'd12:
	  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70 = enc_l_12;
      24'd13:
	  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70 = enc_l_13;
      24'd14:
	  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70 = enc_l_14;
      24'd15:
	  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70 = enc_l_15;
      24'd16:
	  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70 = enc_l_16;
      24'd17:
	  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70 = enc_l_17;
      24'd18:
	  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70 = enc_l_18;
      24'd19:
	  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70 = enc_l_19;
      24'd20:
	  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70 = enc_l_20;
      24'd21:
	  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70 = enc_l_21;
      24'd22:
	  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70 = enc_l_22;
      24'd23:
	  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70 = enc_l_23;
      24'd24:
	  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70 = enc_l_24;
      24'd25:
	  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70 = enc_l_25;
      default: SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d70 =
		   24'b101010101010101010101010 /* unspecified value */ ;
    endcase
  end
  always@(enc_round_1 or
	  enc_l_0 or
	  enc_l_1 or
	  enc_l_2 or
	  enc_l_3 or
	  enc_l_4 or
	  enc_l_5 or
	  enc_l_6 or
	  enc_l_7 or
	  enc_l_8 or
	  enc_l_9 or
	  enc_l_10 or
	  enc_l_11 or
	  enc_l_12 or
	  enc_l_13 or
	  enc_l_14 or
	  enc_l_15 or
	  enc_l_16 or
	  enc_l_17 or
	  enc_l_18 or
	  enc_l_19 or
	  enc_l_20 or
	  enc_l_21 or enc_l_22 or enc_l_23 or enc_l_24 or enc_l_25)
  begin
    case (enc_round_1)
      24'd0:
	  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527 = enc_l_0;
      24'd1:
	  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527 = enc_l_1;
      24'd2:
	  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527 = enc_l_2;
      24'd3:
	  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527 = enc_l_3;
      24'd4:
	  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527 = enc_l_4;
      24'd5:
	  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527 = enc_l_5;
      24'd6:
	  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527 = enc_l_6;
      24'd7:
	  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527 = enc_l_7;
      24'd8:
	  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527 = enc_l_8;
      24'd9:
	  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527 = enc_l_9;
      24'd10:
	  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527 =
	      enc_l_10;
      24'd11:
	  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527 =
	      enc_l_11;
      24'd12:
	  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527 =
	      enc_l_12;
      24'd13:
	  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527 =
	      enc_l_13;
      24'd14:
	  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527 =
	      enc_l_14;
      24'd15:
	  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527 =
	      enc_l_15;
      24'd16:
	  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527 =
	      enc_l_16;
      24'd17:
	  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527 =
	      enc_l_17;
      24'd18:
	  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527 =
	      enc_l_18;
      24'd19:
	  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527 =
	      enc_l_19;
      24'd20:
	  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527 =
	      enc_l_20;
      24'd21:
	  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527 =
	      enc_l_21;
      24'd22:
	  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527 =
	      enc_l_22;
      24'd23:
	  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527 =
	      enc_l_23;
      24'd24:
	  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527 =
	      enc_l_24;
      24'd25:
	  SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527 =
	      enc_l_25;
      default: SEL_ARR_enc_l_0_3_enc_l_1_4_enc_l_2_5_enc_l_3__ETC___d527 =
		   24'b101010101010101010101010 /* unspecified value */ ;
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        enc_alpha <= `BSV_ASSIGNMENT_DELAY 5'd8;
	enc_beta <= `BSV_ASSIGNMENT_DELAY 5'd3;
	enc_k0 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	enc_l_0 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	enc_l_1 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	enc_l_10 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	enc_l_11 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	enc_l_12 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	enc_l_13 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	enc_l_14 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	enc_l_15 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	enc_l_16 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	enc_l_17 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	enc_l_18 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	enc_l_19 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	enc_l_2 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	enc_l_20 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	enc_l_21 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	enc_l_22 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	enc_l_23 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	enc_l_24 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	enc_l_25 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	enc_l_3 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	enc_l_4 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	enc_l_5 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	enc_l_6 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	enc_l_7 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	enc_l_8 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	enc_l_9 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	enc_round_0 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	enc_round_1 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	enc_roundkey_0 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	enc_roundkey_1 <= `BSV_ASSIGNMENT_DELAY 24'd0;
	enc_xyReg_0 <= `BSV_ASSIGNMENT_DELAY 48'd0;
	enc_xyReg_1 <= `BSV_ASSIGNMENT_DELAY 48'd0;
      end
    else
      begin
        if (enc_alpha$EN) enc_alpha <= `BSV_ASSIGNMENT_DELAY enc_alpha$D_IN;
	if (enc_beta$EN) enc_beta <= `BSV_ASSIGNMENT_DELAY enc_beta$D_IN;
	if (enc_k0$EN) enc_k0 <= `BSV_ASSIGNMENT_DELAY enc_k0$D_IN;
	if (enc_l_0$EN) enc_l_0 <= `BSV_ASSIGNMENT_DELAY enc_l_0$D_IN;
	if (enc_l_1$EN) enc_l_1 <= `BSV_ASSIGNMENT_DELAY enc_l_1$D_IN;
	if (enc_l_10$EN) enc_l_10 <= `BSV_ASSIGNMENT_DELAY enc_l_10$D_IN;
	if (enc_l_11$EN) enc_l_11 <= `BSV_ASSIGNMENT_DELAY enc_l_11$D_IN;
	if (enc_l_12$EN) enc_l_12 <= `BSV_ASSIGNMENT_DELAY enc_l_12$D_IN;
	if (enc_l_13$EN) enc_l_13 <= `BSV_ASSIGNMENT_DELAY enc_l_13$D_IN;
	if (enc_l_14$EN) enc_l_14 <= `BSV_ASSIGNMENT_DELAY enc_l_14$D_IN;
	if (enc_l_15$EN) enc_l_15 <= `BSV_ASSIGNMENT_DELAY enc_l_15$D_IN;
	if (enc_l_16$EN) enc_l_16 <= `BSV_ASSIGNMENT_DELAY enc_l_16$D_IN;
	if (enc_l_17$EN) enc_l_17 <= `BSV_ASSIGNMENT_DELAY enc_l_17$D_IN;
	if (enc_l_18$EN) enc_l_18 <= `BSV_ASSIGNMENT_DELAY enc_l_18$D_IN;
	if (enc_l_19$EN) enc_l_19 <= `BSV_ASSIGNMENT_DELAY enc_l_19$D_IN;
	if (enc_l_2$EN) enc_l_2 <= `BSV_ASSIGNMENT_DELAY enc_l_2$D_IN;
	if (enc_l_20$EN) enc_l_20 <= `BSV_ASSIGNMENT_DELAY enc_l_20$D_IN;
	if (enc_l_21$EN) enc_l_21 <= `BSV_ASSIGNMENT_DELAY enc_l_21$D_IN;
	if (enc_l_22$EN) enc_l_22 <= `BSV_ASSIGNMENT_DELAY enc_l_22$D_IN;
	if (enc_l_23$EN) enc_l_23 <= `BSV_ASSIGNMENT_DELAY enc_l_23$D_IN;
	if (enc_l_24$EN) enc_l_24 <= `BSV_ASSIGNMENT_DELAY enc_l_24$D_IN;
	if (enc_l_25$EN) enc_l_25 <= `BSV_ASSIGNMENT_DELAY enc_l_25$D_IN;
	if (enc_l_3$EN) enc_l_3 <= `BSV_ASSIGNMENT_DELAY enc_l_3$D_IN;
	if (enc_l_4$EN) enc_l_4 <= `BSV_ASSIGNMENT_DELAY enc_l_4$D_IN;
	if (enc_l_5$EN) enc_l_5 <= `BSV_ASSIGNMENT_DELAY enc_l_5$D_IN;
	if (enc_l_6$EN) enc_l_6 <= `BSV_ASSIGNMENT_DELAY enc_l_6$D_IN;
	if (enc_l_7$EN) enc_l_7 <= `BSV_ASSIGNMENT_DELAY enc_l_7$D_IN;
	if (enc_l_8$EN) enc_l_8 <= `BSV_ASSIGNMENT_DELAY enc_l_8$D_IN;
	if (enc_l_9$EN) enc_l_9 <= `BSV_ASSIGNMENT_DELAY enc_l_9$D_IN;
	if (enc_round_0$EN)
	  enc_round_0 <= `BSV_ASSIGNMENT_DELAY enc_round_0$D_IN;
	if (enc_round_1$EN)
	  enc_round_1 <= `BSV_ASSIGNMENT_DELAY enc_round_1$D_IN;
	if (enc_roundkey_0$EN)
	  enc_roundkey_0 <= `BSV_ASSIGNMENT_DELAY enc_roundkey_0$D_IN;
	if (enc_roundkey_1$EN)
	  enc_roundkey_1 <= `BSV_ASSIGNMENT_DELAY enc_roundkey_1$D_IN;
	if (enc_xyReg_0$EN)
	  enc_xyReg_0 <= `BSV_ASSIGNMENT_DELAY enc_xyReg_0$D_IN;
	if (enc_xyReg_1$EN)
	  enc_xyReg_1 <= `BSV_ASSIGNMENT_DELAY enc_xyReg_1$D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    enc_alpha = 5'h0A;
    enc_beta = 5'h0A;
    enc_k0 = 24'hAAAAAA;
    enc_l_0 = 24'hAAAAAA;
    enc_l_1 = 24'hAAAAAA;
    enc_l_10 = 24'hAAAAAA;
    enc_l_11 = 24'hAAAAAA;
    enc_l_12 = 24'hAAAAAA;
    enc_l_13 = 24'hAAAAAA;
    enc_l_14 = 24'hAAAAAA;
    enc_l_15 = 24'hAAAAAA;
    enc_l_16 = 24'hAAAAAA;
    enc_l_17 = 24'hAAAAAA;
    enc_l_18 = 24'hAAAAAA;
    enc_l_19 = 24'hAAAAAA;
    enc_l_2 = 24'hAAAAAA;
    enc_l_20 = 24'hAAAAAA;
    enc_l_21 = 24'hAAAAAA;
    enc_l_22 = 24'hAAAAAA;
    enc_l_23 = 24'hAAAAAA;
    enc_l_24 = 24'hAAAAAA;
    enc_l_25 = 24'hAAAAAA;
    enc_l_3 = 24'hAAAAAA;
    enc_l_4 = 24'hAAAAAA;
    enc_l_5 = 24'hAAAAAA;
    enc_l_6 = 24'hAAAAAA;
    enc_l_7 = 24'hAAAAAA;
    enc_l_8 = 24'hAAAAAA;
    enc_l_9 = 24'hAAAAAA;
    enc_round_0 = 24'hAAAAAA;
    enc_round_1 = 24'hAAAAAA;
    enc_roundkey_0 = 24'hAAAAAA;
    enc_roundkey_1 = 24'hAAAAAA;
    enc_xyReg_0 = 48'hAAAAAAAAAAAA;
    enc_xyReg_1 = 48'hAAAAAAAAAAAA;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on
endmodule  // mkSynthesizedUnfoldEncrypt

